<?xml version="1.0" encoding="utf-8"?>
<MutationTestingReport xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <SourceFiles>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\TypeResolver.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="41" EndColumn="30">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0034: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0034: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0034: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="39" EndLine="42" EndColumn="73">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0046: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007a: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="5" EndLine="44" EndColumn="55">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0062: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0062: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0062: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ae: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ae: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ae: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="47" StartColumn="17" EndLine="47" EndColumn="34">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0094: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0094: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0094: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0103: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0103: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0103: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="36" EndLine="42" EndColumn="38">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00ad: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ad: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ad: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0138: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0138: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0138: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="31" EndLine="41" EndColumn="43">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0038: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005e: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="56" EndLine="44" EndColumn="65">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0064: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00b3: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="48" StartColumn="13" EndLine="48" EndColumn="14">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>011f: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>011f: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>011f: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>011f: Add =&gt; Rem</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Rem</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Rem</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="39" StartColumn="3" EndLine="39" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="40" StartColumn="7" EndLine="40" EndColumn="84">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="13" EndLine="42" EndColumn="20">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="22" EndLine="42" EndColumn="35">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="43" StartColumn="13" EndLine="43" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="45" StartColumn="5" EndLine="45" EndColumn="46">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="46" StartColumn="17" EndLine="46" EndColumn="109">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="47" StartColumn="35" EndLine="47" EndColumn="47">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="49" StartColumn="13" EndLine="49" EndColumn="25">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="50" StartColumn="9" EndLine="50" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="34" StartColumn="3" EndLine="34" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="35" StartColumn="4" EndLine="35" EndColumn="85">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="36" StartColumn="3" EndLine="36" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with Refix.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Collections.Generic;</Line>
        <Line Number="24">using System.Linq;</Line>
        <Line Number="25">using System.Reflection;</Line>
        <Line Number="26" />
        <Line Number="27">using Mono.Cecil;</Line>
        <Line Number="28" />
        <Line Number="29">namespace NinjaTurtles</Line>
        <Line Number="30">{</Line>
        <Line Number="31">    internal class TypeResolver</Line>
        <Line Number="32">    {</Line>
        <Line Number="33">        internal static Type ResolveTypeFromReferences(Assembly callingAssembly, string className)</Line>
        <Line Number="34">        {</Line>
        <Line Number="35">            return ResolveTypeFromReferences(callingAssembly, className, new List&lt;string&gt;());</Line>
        <Line Number="36">        }</Line>
        <Line Number="37">        </Line>
        <Line Number="38">        private static Type ResolveTypeFromReferences(Assembly assembly, string className, IList&lt;string&gt; consideredAssemblies)</Line>
        <Line Number="39">        {</Line>
        <Line Number="40">            var type = assembly.GetTypes().SingleOrDefault(t =&gt; t.FullName == className);</Line>
        <Line Number="41">            if (type != null) return type;</Line>
        <Line Number="42">            foreach (var reference in assembly.GetReferencedAssemblies())</Line>
        <Line Number="43">            {</Line>
        <Line Number="44">                if (consideredAssemblies.Contains(reference.Name)) continue;</Line>
        <Line Number="45">                consideredAssemblies.Add(reference.Name);</Line>
        <Line Number="46">                type = ResolveTypeFromReferences(Assembly.Load(reference), className, consideredAssemblies);</Line>
        <Line Number="47">                if (type != null) return type;</Line>
        <Line Number="48">            }</Line>
        <Line Number="49">            return null;</Line>
        <Line Number="50">        }</Line>
        <Line Number="51">    }</Line>
        <Line Number="52">}</Line>
        <Line Number="53" />
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\Turtles\MethodTurtleBase.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="40" StartColumn="9" EndLine="40" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="41" EndColumn="46">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="9" EndLine="42" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="59" StartColumn="9" EndLine="59" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="60" StartColumn="13" EndLine="60" EndColumn="99">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="61" StartColumn="13" EndLine="61" EndColumn="48">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="62" StartColumn="13" EndLine="68" EndColumn="15">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="69" StartColumn="9" EndLine="69" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with Refix.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Collections.Generic;</Line>
        <Line Number="24">using System.IO;</Line>
        <Line Number="25">using System.Linq;</Line>
        <Line Number="26" />
        <Line Number="27">using Mono.Cecil;</Line>
        <Line Number="28">using Mono.Cecil.Cil;</Line>
        <Line Number="29">using Mono.Cecil.Rocks;</Line>
        <Line Number="30" />
        <Line Number="31">namespace NinjaTurtles.Turtles</Line>
        <Line Number="32">{</Line>
        <Line Number="33">    public abstract class MethodTurtleBase : IMethodTurtle</Line>
        <Line Number="34">    {</Line>
        <Line Number="35">        private int[] _originalOffsets;</Line>
        <Line Number="36">        private Module _module;</Line>
        <Line Number="37">        private MethodDefinition _method;</Line>
        <Line Number="38" />
        <Line Number="39">        public void MutantComplete(MutationTestMetaData metaData)</Line>
        <Line Number="40">        {</Line>
        <Line Number="41">            metaData.TestDirectory.Dispose();</Line>
        <Line Number="42">        }</Line>
        <Line Number="43" />
        <Line Number="44">        public IEnumerable&lt;MutationTestMetaData&gt; Mutate(MethodDefinition method, Module module)</Line>
        <Line Number="45">        {</Line>
        <Line Number="46">            _module = module;</Line>
        <Line Number="47">            _method = method;</Line>
        <Line Number="48">            _originalOffsets = method.Body.Instructions.Select(i =&gt; i.Offset).ToArray();</Line>
        <Line Number="49">            method.Body.SimplifyMacros();</Line>
        <Line Number="50">            foreach (var mutation in DoMutate(method, module))</Line>
        <Line Number="51">            {</Line>
        <Line Number="52">                yield return mutation;</Line>
        <Line Number="53">            }</Line>
        <Line Number="54">        }</Line>
        <Line Number="55" />
        <Line Number="56">        protected abstract IEnumerable&lt;MutationTestMetaData&gt; DoMutate(MethodDefinition method, Module module);</Line>
        <Line Number="57" />
        <Line Number="58">        protected MutationTestMetaData DoYield(MethodDefinition method, Module module, string description, int index)</Line>
        <Line Number="59">        {</Line>
        <Line Number="60">            var testDirectory = new TestDirectory(Path.GetDirectoryName(module.AssemblyLocation));</Line>
        <Line Number="61">            testDirectory.SaveAssembly(module);</Line>
        <Line Number="62">            return new MutationTestMetaData</Line>
        <Line Number="63">            {</Line>
        <Line Number="64">                Description = description,</Line>
        <Line Number="65">                MethodDefinition = method,</Line>
        <Line Number="66">                TestDirectory = testDirectory,</Line>
        <Line Number="67">                ILIndex = index</Line>
        <Line Number="68">            };</Line>
        <Line Number="69">        }</Line>
        <Line Number="70" />
        <Line Number="71">        public int GetOriginalOffset(int index)</Line>
        <Line Number="72">        {</Line>
        <Line Number="73">            return _originalOffsets[index];</Line>
        <Line Number="74">        }</Line>
        <Line Number="75" />
        <Line Number="76">        public string GetOriginalSourceFileName(int index)</Line>
        <Line Number="77">        {</Line>
        <Line Number="78">            var sequencePoint = GetCurrentSequencePoint(index);</Line>
        <Line Number="79">            return Path.GetFileName(sequencePoint.Document.Url);</Line>
        <Line Number="80">        }</Line>
        <Line Number="81" />
        <Line Number="82">        public SequencePoint GetCurrentSequencePoint(int index)</Line>
        <Line Number="83">        {</Line>
        <Line Number="84">            var instruction = _method.Body.Instructions[index];</Line>
        <Line Number="85">            while ((instruction.SequencePoint == null</Line>
        <Line Number="86">                || instruction.SequencePoint.StartLine == 0xfeefee) &amp;&amp; index &gt; 0)</Line>
        <Line Number="87">            {</Line>
        <Line Number="88">                index--;</Line>
        <Line Number="89">                instruction = _method.Body.Instructions[index];</Line>
        <Line Number="90">            }</Line>
        <Line Number="91">            var sequencePoint = instruction.SequencePoint;</Line>
        <Line Number="92">            return sequencePoint;</Line>
        <Line Number="93">        }</Line>
        <Line Number="94" />
        <Line Number="95">        public string GetOriginalSourceCode(int index)</Line>
        <Line Number="96">        {</Line>
        <Line Number="97">            var sequencePoint = GetCurrentSequencePoint(index);</Line>
        <Line Number="98">            string result = "";</Line>
        <Line Number="99">            string[] sourceCode = _module.SourceFiles[sequencePoint.Document.Url];</Line>
        <Line Number="100">            int upperBound = Math.Min(sequencePoint.EndLine + 2, sourceCode.Length);</Line>
        <Line Number="101">            for (int line = Math.Max(sequencePoint.StartLine - 2, 1); line &lt;= upperBound; line++)</Line>
        <Line Number="102">            {</Line>
        <Line Number="103">                string sourceLine = sourceCode[line - 1].Replace("\t", "    ");</Line>
        <Line Number="104">                result += line.ToString().PadLeft(4, ' ') + ": " + sourceLine.TrimEnd(' ', '\t');</Line>
        <Line Number="105">                if (line &lt; upperBound) result += Environment.NewLine;</Line>
        <Line Number="106">            }</Line>
        <Line Number="107">            return result;</Line>
        <Line Number="108">        }</Line>
        <Line Number="109">    }</Line>
        <Line Number="110">}</Line>
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\MutationTest.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="101" StartColumn="4" EndLine="101" EndColumn="27">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000d: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="99" StartColumn="3" EndLine="99" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="100" StartColumn="4" EndLine="100" EndColumn="69">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="102" StartColumn="4" EndLine="102" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="103" StartColumn="5" EndLine="103" EndColumn="41">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="104" StartColumn="4" EndLine="104" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="105" StartColumn="4" EndLine="105" EndColumn="37">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="106" StartColumn="3" EndLine="106" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="28" EndLine="77" EndColumn="30">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00e4: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e4: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e4: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f1: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f1: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f1: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="76" StartColumn="4" EndLine="76" EndColumn="37">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0073: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0073: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0073: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="31" EndLine="77" EndColumn="48">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>008a: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="4" EndLine="92" EndColumn="21">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0154: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0154: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0154: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="87" StartColumn="4" EndLine="87" EndColumn="19">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0133: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0133: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0133: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="90" StartColumn="5" EndLine="90" EndColumn="12">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0141: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="67" StartColumn="3" EndLine="67" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="68" StartColumn="4" EndLine="68" EndColumn="47">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="69" StartColumn="13" EndLine="69" EndColumn="44">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="70" StartColumn="7" EndLine="70" EndColumn="45">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="71" StartColumn="4" EndLine="71" EndColumn="63">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="72" StartColumn="4" EndLine="72" EndColumn="39">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="73" StartColumn="4" EndLine="73" EndColumn="41">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="74" StartColumn="4" EndLine="74" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="75" StartColumn="4" EndLine="75" EndColumn="21">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="76" StartColumn="38" EndLine="76" EndColumn="63">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="4" EndLine="77" EndColumn="11">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="13" EndLine="77" EndColumn="27">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="78" StartColumn="4" EndLine="78" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="79" StartColumn="5" EndLine="79" EndColumn="70">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="80" StartColumn="5" EndLine="81" EndColumn="90">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="82" StartColumn="4" EndLine="82" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="84" StartColumn="13" EndLine="84" EndColumn="44">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="85" StartColumn="13" EndLine="85" EndColumn="70">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="88" StartColumn="4" EndLine="88" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="89" StartColumn="5" EndLine="89" EndColumn="67">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="93" StartColumn="4" EndLine="93" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="94" StartColumn="5" EndLine="94" EndColumn="46">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="96" StartColumn="3" EndLine="96" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="122" StartColumn="5" EndLine="122" EndColumn="23">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0052: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0052: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0052: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="133" StartColumn="13" EndLine="137" EndColumn="37">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>009a: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="132" StartColumn="7" EndLine="132" EndColumn="60">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>007e: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007e: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0081: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007e: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="140" StartColumn="13" EndLine="140" EndColumn="33">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00cf: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cf: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cf: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="109" StartColumn="3" EndLine="109" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="110" StartColumn="4" EndLine="110" EndColumn="116">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="112" StartColumn="7" EndLine="112" EndColumn="129">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="114" StartColumn="13" EndLine="114" EndColumn="95">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="116" StartColumn="4" EndLine="116" EndColumn="20">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="117" StartColumn="4" EndLine="117" EndColumn="51">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="118" StartColumn="4" EndLine="118" EndColumn="22">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="121" StartColumn="4" EndLine="121" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="123" StartColumn="5" EndLine="123" EndColumn="6">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="124" StartColumn="6" EndLine="124" EndColumn="41">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="125" StartColumn="5" EndLine="125" EndColumn="6">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="126" StartColumn="5" EndLine="126" EndColumn="33">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="127" StartColumn="4" EndLine="127" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="128" StartColumn="4" EndLine="128" EndColumn="9">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="128" StartColumn="10" EndLine="128" EndColumn="11">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="128" StartColumn="11" EndLine="128" EndColumn="12">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="130" StartColumn="4" EndLine="130" EndColumn="36">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="138" StartColumn="13" EndLine="138" EndColumn="109">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="141" StartColumn="13" EndLine="141" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="142" StartColumn="17" EndLine="145" EndColumn="69">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="146" StartColumn="13" EndLine="146" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="148" StartColumn="13" EndLine="148" EndColumn="39">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="150" StartColumn="13" EndLine="150" EndColumn="37">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="151" StartColumn="3" EndLine="151" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="133" StartColumn="7" EndLine="137" EndColumn="37">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="142" StartColumn="17" EndLine="142" EndColumn="145">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="143" StartColumn="17" EndLine="143" EndColumn="83">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="144" StartColumn="13" EndLine="144" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="146" StartColumn="13" EndLine="146" EndColumn="37">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="147" StartColumn="3" EndLine="147" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with Refix.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Collections.Generic;</Line>
        <Line Number="24">using System.Diagnostics;</Line>
        <Line Number="25">using System.IO;</Line>
        <Line Number="26">using System.Linq;</Line>
        <Line Number="27">using System.Management;</Line>
        <Line Number="28">using System.Threading;</Line>
        <Line Number="29">using System.Threading.Tasks;</Line>
        <Line Number="30">using System.Xml.Serialization;</Line>
        <Line Number="31" />
        <Line Number="32">using Mono.Cecil;</Line>
        <Line Number="33" />
        <Line Number="34">using NinjaTurtles.Reporting;</Line>
        <Line Number="35">using NinjaTurtles.Turtles;</Line>
        <Line Number="36" />
        <Line Number="37">namespace NinjaTurtles</Line>
        <Line Number="38">{</Line>
        <Line Number="39">    internal class MutationTest : IMutationTest</Line>
        <Line Number="40">    {</Line>
        <Line Number="41">        private readonly IList&lt;Type&gt; _mutationsToApply = new List&lt;Type&gt;();</Line>
        <Line Number="42">        private readonly string _testAssemblyLocation;</Line>
        <Line Number="43">        private readonly Type[] _parameterTypes;</Line>
        <Line Number="44">        private readonly AssemblyDefinition _testAssembly;</Line>
        <Line Number="45">        private readonly TypeReference _targetTypeReference;</Line>
        <Line Number="46">        private Module _module;</Line>
        <Line Number="47">        private string _testList;</Line>
        <Line Number="48">        private MutationTestingReport _report;</Line>
        <Line Number="49">        private ReportingStrategy _reportingStrategy = new NullReportingStrategy();</Line>
        <Line Number="50">        private string _reportFileName;</Line>
        <Line Number="51" />
        <Line Number="52">        internal MutationTest(string testAssemblyLocation, Type targetType, string targetMethod, Type[] parameterTypes)</Line>
        <Line Number="53">        {</Line>
        <Line Number="54">            TargetType = targetType;</Line>
        <Line Number="55">            TargetMethod = targetMethod;</Line>
        <Line Number="56">            _testAssemblyLocation = testAssemblyLocation;</Line>
        <Line Number="57">            _parameterTypes = parameterTypes;</Line>
        <Line Number="58">            _testAssembly = AssemblyDefinition.ReadAssembly(testAssemblyLocation);</Line>
        <Line Number="59">            _targetTypeReference = _testAssembly.MainModule.Import(targetType);</Line>
        <Line Number="60">        }</Line>
        <Line Number="61" />
        <Line Number="62">        public Type TargetType { get; private set; }</Line>
        <Line Number="63" />
        <Line Number="64">        public string TargetMethod { get; private set; }</Line>
        <Line Number="65" />
        <Line Number="66">        public void Run()</Line>
        <Line Number="67">        {</Line>
        <Line Number="68">            MethodDefinition method = ValidateMethod();</Line>
        <Line Number="69">            _module.LoadDebugInformation();</Line>
        <Line Number="70">            _report = new MutationTestingReport();</Line>
        <Line Number="71">            IEnumerable&lt;string&gt; tests = GetMatchingTestsOrFail(method);</Line>
        <Line Number="72">            _testList = Path.GetTempFileName();</Line>
        <Line Number="73">            File.WriteAllLines(_testList, tests);</Line>
        <Line Number="74">            int count = 0;</Line>
        <Line Number="75">            int failures = 0;</Line>
        <Line Number="76">            if (_mutationsToApply.Count == 0) PopulateDefaultTurtles();</Line>
        <Line Number="77">            foreach (var turtleType in _mutationsToApply)</Line>
        <Line Number="78">            {</Line>
        <Line Number="79">                var turtle = (IMethodTurtle)Activator.CreateInstance(turtleType);</Line>
        <Line Number="80">                Parallel.ForEach(turtle.Mutate(method, _module),</Line>
        <Line Number="81">                                 mutation =&gt; RunMutation(turtle, mutation, ref failures, ref count));</Line>
        <Line Number="82">            }</Line>
        <Line Number="83" />
        <Line Number="84">            _report.RegisterMethod(method);</Line>
        <Line Number="85">            _reportingStrategy.WriteReport(_report, _reportFileName);</Line>
        <Line Number="86" />
        <Line Number="87">            if (count == 0)</Line>
        <Line Number="88">            {</Line>
        <Line Number="89">                Console.WriteLine("No valid mutations found (this is fine).");</Line>
        <Line Number="90">                return;</Line>
        <Line Number="91">            }</Line>
        <Line Number="92">            if (failures &gt; 0)</Line>
        <Line Number="93">            {</Line>
        <Line Number="94">                throw new MutationTestFailureException();</Line>
        <Line Number="95">            }</Line>
        <Line Number="96">        }</Line>
        <Line Number="97" />
        <Line Number="98">        private void RunMutation(IMethodTurtle turtle, MutationTestMetaData mutation, ref int failures, ref int count)</Line>
        <Line Number="99">        {</Line>
        <Line Number="100">            bool testProcessFailed = CheckTestProcessFails(turtle, mutation);</Line>
        <Line Number="101">            if (!testProcessFailed)</Line>
        <Line Number="102">            {</Line>
        <Line Number="103">                Interlocked.Increment(ref failures);</Line>
        <Line Number="104">            }</Line>
        <Line Number="105">            Interlocked.Increment(ref count);</Line>
        <Line Number="106">        }</Line>
        <Line Number="107" />
        <Line Number="108">        private bool CheckTestProcessFails(IMethodTurtle turtle, MutationTestMetaData mutation)</Line>
        <Line Number="109">        {</Line>
        <Line Number="110">            string testAssemblyLocation = Path.Combine(mutation.TestDirectoryName, Path.GetFileName(_testAssemblyLocation));</Line>
        <Line Number="111" />
        <Line Number="112">            string arguments = string.Format("\"{0}\" {{0}}runlist=\"{1}\" {{0}}nologo {{0}}nodots", testAssemblyLocation, _testList);</Line>
        <Line Number="113" />
        <Line Number="114">            var process = ConsoleProcessFactory.CreateProcess("nunit-console.exe", arguments);</Line>
        <Line Number="115" />
        <Line Number="116">            process.Start();</Line>
        <Line Number="117">            bool exitedInTime = process.WaitForExit(30000);</Line>
        <Line Number="118">            int exitCode = -1;</Line>
        <Line Number="119" />
        <Line Number="120">            try</Line>
        <Line Number="121">            {</Line>
        <Line Number="122">                if (!exitedInTime)</Line>
        <Line Number="123">                {</Line>
        <Line Number="124">                    KillProcessAndChildren(process.Id);</Line>
        <Line Number="125">                }</Line>
        <Line Number="126">                exitCode = process.ExitCode;</Line>
        <Line Number="127">            }</Line>
        <Line Number="128">            catch {}</Line>
        <Line Number="129" />
        <Line Number="130">            turtle.MutantComplete(mutation);</Line>
        <Line Number="131" />
        <Line Number="132">            bool testSuitePassed = exitCode == 0 &amp;&amp; exitedInTime;</Line>
        <Line Number="133">            string result = string.Format("Mutant: {0}. {1}",</Line>
        <Line Number="134">                              mutation.Description,</Line>
        <Line Number="135">                              testSuitePassed</Line>
        <Line Number="136">                                  ? "Survived."</Line>
        <Line Number="137">                                : "Killed.");</Line>
        <Line Number="138">            _report.AddResult(turtle.GetCurrentSequencePoint(mutation.ILIndex), mutation, !testSuitePassed);</Line>
        <Line Number="139" />
        <Line Number="140">            if (testSuitePassed)</Line>
        <Line Number="141">            {</Line>
        <Line Number="142">                result = string.Format("{0}\nOriginal source code around surviving mutant (in {1}):\n{2}",</Line>
        <Line Number="143">                    result,</Line>
        <Line Number="144">                    turtle.GetOriginalSourceFileName(mutation.ILIndex),</Line>
        <Line Number="145">                    turtle.GetOriginalSourceCode(mutation.ILIndex));</Line>
        <Line Number="146">            }</Line>
        <Line Number="147" />
        <Line Number="148">            Console.WriteLine(result);</Line>
        <Line Number="149" />
        <Line Number="150">            return !testSuitePassed;</Line>
        <Line Number="151">        }</Line>
        <Line Number="152" />
        <Line Number="153">        private void KillProcessAndChildren(int pid)</Line>
        <Line Number="154">        {</Line>
        <Line Number="155">            using (var searcher = new ManagementObjectSearcher("Select * From Win32_Process Where ParentProcessID=" + pid))</Line>
        <Line Number="156">            using (ManagementObjectCollection moc = searcher.Get())</Line>
        <Line Number="157">            {</Line>
        <Line Number="158">                foreach (ManagementObject mo in moc)</Line>
        <Line Number="159">                {</Line>
        <Line Number="160">                    KillProcessAndChildren(Convert.ToInt32(mo["ProcessID"]));</Line>
        <Line Number="161">                }</Line>
        <Line Number="162">                try</Line>
        <Line Number="163">                {</Line>
        <Line Number="164">                    Process proc = Process.GetProcessById(pid);</Line>
        <Line Number="165">                    proc.Kill();</Line>
        <Line Number="166">                }</Line>
        <Line Number="167">                catch (ArgumentException) {}</Line>
        <Line Number="168">            }</Line>
        <Line Number="169">        }</Line>
        <Line Number="170" />
        <Line Number="171" />
        <Line Number="172">        private void PopulateDefaultTurtles()</Line>
        <Line Number="173">        {</Line>
        <Line Number="174">            foreach (var type in GetType().Assembly.GetTypes()</Line>
        <Line Number="175">                .Where(t =&gt; t.GetInterface("IMethodTurtle") != null</Line>
        <Line Number="176">                &amp;&amp; !t.IsAbstract))</Line>
        <Line Number="177">            {</Line>
        <Line Number="178">                _mutationsToApply.Add(type);</Line>
        <Line Number="179">            }</Line>
        <Line Number="180">        }</Line>
        <Line Number="181" />
        <Line Number="182">        private IEnumerable&lt;string&gt; GetMatchingTestsOrFail(MethodDefinition targetMethod)</Line>
        <Line Number="183">        {</Line>
        <Line Number="184">            var tests = new List&lt;string&gt;();</Line>
        <Line Number="185">            foreach (var type in _testAssembly.MainModule.Types)</Line>
        <Line Number="186">            {</Line>
        <Line Number="187">                foreach (var method in type.Methods)</Line>
        <Line Number="188">                {</Line>
        <Line Number="189">                    if (method.CustomAttributes</Line>
        <Line Number="190">                            .Any(a =&gt; HasMatchingMethodTestedAttribute(targetMethod, a)))</Line>
        <Line Number="191">                    {</Line>
        <Line Number="192">                        tests.Add(string.Format ("{0}.{1}", type.FullName, method.Name));</Line>
        <Line Number="193">                    }</Line>
        <Line Number="194" />
        <Line Number="195">                }</Line>
        <Line Number="196">            }</Line>
        <Line Number="197">            if (!tests.Any())</Line>
        <Line Number="198">            {</Line>
        <Line Number="199">                throw new MutationTestFailureException(</Line>
        <Line Number="200">                    "No matching tests were found to run.");</Line>
        <Line Number="201">            }</Line>
        <Line Number="202">            return tests;</Line>
        <Line Number="203">        }</Line>
        <Line Number="204" />
        <Line Number="205">        private bool HasMatchingMethodTestedAttribute(MethodDefinition targetMethod, CustomAttribute attribute)</Line>
        <Line Number="206">        {</Line>
        <Line Number="207">            if (attribute.AttributeType.Name != "MethodTestedAttribute") return false;</Line>
        <Line Number="208">            if ((string)attribute.ConstructorArguments[1].Value != targetMethod.Name) return false;</Line>
        <Line Number="209">            if (attribute.ConstructorArguments[0].Value is string</Line>
        <Line Number="210">                &amp;&amp; (string)attribute.ConstructorArguments[0].Value != _targetTypeReference.FullName)</Line>
        <Line Number="211">            {</Line>
        <Line Number="212">                return false;</Line>
        <Line Number="213">            }</Line>
        <Line Number="214">            if (attribute.ConstructorArguments[0].Value is TypeReference</Line>
        <Line Number="215">                &amp;&amp; ((TypeReference)attribute.ConstructorArguments[0].Value).FullName != _targetTypeReference.FullName)</Line>
        <Line Number="216">            {</Line>
        <Line Number="217">                return false;</Line>
        <Line Number="218">            }</Line>
        <Line Number="219">            if (_parameterTypes != null</Line>
        <Line Number="220">                &amp;&amp; attribute.HasProperties</Line>
        <Line Number="221">                &amp;&amp; attribute.Properties.Any(p =&gt; p.Name == "ParameterTypes")</Line>
        <Line Number="222">                &amp;&amp; !Enumerable.SequenceEqual(_parameterTypes, (Type[])attribute.Properties.Single(p =&gt; p.Name == "ParameterTypes").Argument.Value))</Line>
        <Line Number="223">            {</Line>
        <Line Number="224">                return false;</Line>
        <Line Number="225">            }</Line>
        <Line Number="226">            return true;</Line>
        <Line Number="227">        }</Line>
        <Line Number="228" />
        <Line Number="229">        private MethodDefinition ValidateMethod()</Line>
        <Line Number="230">        {</Line>
        <Line Number="231">            _module = new Module(TargetType.Assembly.Location);</Line>
        <Line Number="232">            var type = _module.Definition.Types</Line>
        <Line Number="233">                .Single(t =&gt; t.FullName == TargetType.FullName);</Line>
        <Line Number="234">            var method = MethodDefinitionResolver.ResolveMethod(type, TargetMethod, _parameterTypes);</Line>
        <Line Number="235">            if (method == null)</Line>
        <Line Number="236">            {</Line>
        <Line Number="237">                throw new MutationTestFailureException(</Line>
        <Line Number="238">                    string.Format("Method '{0}' was not recognised.", TargetMethod));</Line>
        <Line Number="239">            }</Line>
        <Line Number="240">            return method;</Line>
        <Line Number="241">        }</Line>
        <Line Number="242" />
        <Line Number="243">        public IMutationTest With&lt;T&gt;() where T : IMethodTurtle</Line>
        <Line Number="244">        {</Line>
        <Line Number="245">            _mutationsToApply.Add(typeof(T));</Line>
        <Line Number="246">            return this;</Line>
        <Line Number="247">        }</Line>
        <Line Number="248" />
        <Line Number="249">        public IMutationTest WriteReportTo(string fileName)</Line>
        <Line Number="250">        {</Line>
        <Line Number="251">            _reportingStrategy = new OverwriteReportingStrategy();</Line>
        <Line Number="252">            _reportFileName = fileName;</Line>
        <Line Number="253">            return this;</Line>
        <Line Number="254">        }</Line>
        <Line Number="255" />
        <Line Number="256">        public IMutationTest MergeReportTo(string fileName)</Line>
        <Line Number="257">        {</Line>
        <Line Number="258">            _reportingStrategy = new MergeReportingStrategy();</Line>
        <Line Number="259">            _reportFileName = fileName;</Line>
        <Line Number="260">            return this;</Line>
        <Line Number="261">        }</Line>
        <Line Number="262" />
        <Line Number="263">        private abstract class ReportingStrategy</Line>
        <Line Number="264">        {</Line>
        <Line Number="265">            public abstract void WriteReport(MutationTestingReport report, string fileName);</Line>
        <Line Number="266">        }</Line>
        <Line Number="267" />
        <Line Number="268">        private class NullReportingStrategy : ReportingStrategy</Line>
        <Line Number="269">        {</Line>
        <Line Number="270">            public override void WriteReport(MutationTestingReport report, string fileName) { }</Line>
        <Line Number="271">        }</Line>
        <Line Number="272" />
        <Line Number="273">        private class OverwriteReportingStrategy : ReportingStrategy</Line>
        <Line Number="274">        {</Line>
        <Line Number="275">            public override void WriteReport(MutationTestingReport report, string fileName)</Line>
        <Line Number="276">            {</Line>
        <Line Number="277">                using (var streamWriter = File.CreateText(fileName))</Line>
        <Line Number="278">                {</Line>
        <Line Number="279">                    new XmlSerializer(typeof(MutationTestingReport)).Serialize(streamWriter, report);</Line>
        <Line Number="280">                }</Line>
        <Line Number="281">            }</Line>
        <Line Number="282">        }</Line>
        <Line Number="283" />
        <Line Number="284">        private class MergeReportingStrategy : ReportingStrategy</Line>
        <Line Number="285">        {</Line>
        <Line Number="286">            public override void WriteReport(MutationTestingReport report, string fileName)</Line>
        <Line Number="287">            {</Line>
        <Line Number="288">                report.MergeFromFile(fileName);</Line>
        <Line Number="289">                using (var streamWriter = File.CreateText(fileName))</Line>
        <Line Number="290">                {</Line>
        <Line Number="291">                    new XmlSerializer(typeof(MutationTestingReport)).Serialize(streamWriter, report);</Line>
        <Line Number="292">                }</Line>
        <Line Number="293">            }</Line>
        <Line Number="294">        }</Line>
        <Line Number="295">    }</Line>
        <Line Number="296">}</Line>
        <Line Number="297" />
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\MutationTestBuilder.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="39" StartColumn="9" EndLine="39" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="40" StartColumn="13" EndLine="40" EndColumn="65">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="41" EndColumn="102">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="43" StartColumn="13" EndLine="43" EndColumn="94">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="9" EndLine="44" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with Refix.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Reflection;</Line>
        <Line Number="24" />
        <Line Number="25">namespace NinjaTurtles</Line>
        <Line Number="26">{</Line>
        <Line Number="27">    public sealed class MutationTestBuilder&lt;T&gt;</Line>
        <Line Number="28">    {</Line>
        <Line Number="29">        public static IMutationTest For(string targetMethod, Type[] parameterTypes = null)</Line>
        <Line Number="30">        {</Line>
        <Line Number="31">            var callingAssembly = Assembly.GetCallingAssembly();</Line>
        <Line Number="32">            return MutationTestBuilder.For(callingAssembly.Location, typeof(T), targetMethod, parameterTypes);</Line>
        <Line Number="33">        }</Line>
        <Line Number="34">    }</Line>
        <Line Number="35" />
        <Line Number="36">    public sealed class MutationTestBuilder</Line>
        <Line Number="37">    {</Line>
        <Line Number="38">        public static IMutationTest For(string targetClass, string targetMethod, Type[] parameterTypes = null)</Line>
        <Line Number="39">        {</Line>
        <Line Number="40">            var callingAssembly = Assembly.GetCallingAssembly();</Line>
        <Line Number="41">            Type resolvedType = TypeResolver.ResolveTypeFromReferences(callingAssembly, targetClass);</Line>
        <Line Number="42" />
        <Line Number="43">            return For(callingAssembly.Location, resolvedType, targetMethod, parameterTypes);</Line>
        <Line Number="44">        }</Line>
        <Line Number="45" />
        <Line Number="46">        internal static IMutationTest For(string callingAssemblyLocation, Type targetType, string targetMethod, Type[] parameterTypes)</Line>
        <Line Number="47">        {</Line>
        <Line Number="48">            return new MutationTest(callingAssemblyLocation, targetType, targetMethod, parameterTypes);</Line>
        <Line Number="49">        }</Line>
        <Line Number="50">    }</Line>
        <Line Number="51">}</Line>
        <Line Number="52" />
      </Lines>
    </SourceFile>
    <SourceFile>
      <SequencePoints>
        <SequencePoint StartLine="34" StartColumn="3" EndLine="34" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="35" StartColumn="4" EndLine="35" EndColumn="85">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="36" StartColumn="3" EndLine="36" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="40" StartColumn="9" EndLine="40" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="41" EndColumn="46">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="9" EndLine="42" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="59" StartColumn="9" EndLine="59" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="60" StartColumn="13" EndLine="60" EndColumn="99">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="61" StartColumn="13" EndLine="61" EndColumn="48">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="62" StartColumn="13" EndLine="68" EndColumn="15">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="69" StartColumn="9" EndLine="69" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="99" StartColumn="3" EndLine="99" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="100" StartColumn="4" EndLine="100" EndColumn="69">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="101" StartColumn="4" EndLine="101" EndColumn="27">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Rem</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="102" StartColumn="4" EndLine="102" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="103" StartColumn="5" EndLine="103" EndColumn="41">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="104" StartColumn="4" EndLine="104" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="105" StartColumn="4" EndLine="105" EndColumn="37">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="106" StartColumn="3" EndLine="106" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="67" StartColumn="3" EndLine="67" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="68" StartColumn="4" EndLine="68" EndColumn="47">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="69" StartColumn="13" EndLine="69" EndColumn="44">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="70" StartColumn="7" EndLine="70" EndColumn="45">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="71" StartColumn="4" EndLine="71" EndColumn="63">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="72" StartColumn="4" EndLine="72" EndColumn="39">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="73" StartColumn="4" EndLine="73" EndColumn="41">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="74" StartColumn="4" EndLine="74" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="75" StartColumn="4" EndLine="75" EndColumn="21">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="76" StartColumn="4" EndLine="76" EndColumn="37">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="76" StartColumn="38" EndLine="76" EndColumn="63">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="4" EndLine="77" EndColumn="11">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="31" EndLine="77" EndColumn="48">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="13" EndLine="77" EndColumn="27">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="78" StartColumn="4" EndLine="78" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="79" StartColumn="5" EndLine="79" EndColumn="70">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="80" StartColumn="5" EndLine="81" EndColumn="90">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="82" StartColumn="4" EndLine="82" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="28" EndLine="77" EndColumn="30">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="84" StartColumn="13" EndLine="84" EndColumn="44">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="85" StartColumn="13" EndLine="85" EndColumn="70">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="87" StartColumn="4" EndLine="87" EndColumn="19">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="88" StartColumn="4" EndLine="88" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="89" StartColumn="5" EndLine="89" EndColumn="67">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="90" StartColumn="5" EndLine="90" EndColumn="12">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="4" EndLine="92" EndColumn="21">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="93" StartColumn="4" EndLine="93" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="94" StartColumn="5" EndLine="94" EndColumn="46">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="96" StartColumn="3" EndLine="96" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="109" StartColumn="3" EndLine="109" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="110" StartColumn="4" EndLine="110" EndColumn="116">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="112" StartColumn="7" EndLine="112" EndColumn="129">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="114" StartColumn="13" EndLine="114" EndColumn="95">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="116" StartColumn="4" EndLine="116" EndColumn="20">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="117" StartColumn="4" EndLine="117" EndColumn="51">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="118" StartColumn="4" EndLine="118" EndColumn="22">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="121" StartColumn="4" EndLine="121" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="122" StartColumn="5" EndLine="122" EndColumn="23">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="123" StartColumn="5" EndLine="123" EndColumn="6">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="124" StartColumn="6" EndLine="124" EndColumn="41">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="125" StartColumn="5" EndLine="125" EndColumn="6">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="126" StartColumn="5" EndLine="126" EndColumn="33">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="127" StartColumn="4" EndLine="127" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="128" StartColumn="4" EndLine="128" EndColumn="9">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="128" StartColumn="10" EndLine="128" EndColumn="11">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="128" StartColumn="11" EndLine="128" EndColumn="12">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="130" StartColumn="4" EndLine="130" EndColumn="36">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="132" StartColumn="7" EndLine="132" EndColumn="60">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="133" StartColumn="7" EndLine="137" EndColumn="37">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="138" StartColumn="13" EndLine="138" EndColumn="109">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="140" StartColumn="13" EndLine="140" EndColumn="33">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="141" StartColumn="13" EndLine="141" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="142" StartColumn="17" EndLine="142" EndColumn="145">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="143" StartColumn="17" EndLine="143" EndColumn="83">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="144" StartColumn="13" EndLine="144" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="146" StartColumn="13" EndLine="146" EndColumn="37">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="147" StartColumn="3" EndLine="147" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="39" StartColumn="9" EndLine="39" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="40" StartColumn="13" EndLine="40" EndColumn="65">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="41" EndColumn="102">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="43" StartColumn="13" EndLine="43" EndColumn="94">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="9" EndLine="44" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="39" StartColumn="3" EndLine="39" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="40" StartColumn="7" EndLine="40" EndColumn="84">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="41" EndColumn="30">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="31" EndLine="41" EndColumn="43">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="13" EndLine="42" EndColumn="20">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="39" EndLine="42" EndColumn="73">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="22" EndLine="42" EndColumn="35">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="43" StartColumn="13" EndLine="43" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="5" EndLine="44" EndColumn="55">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="56" EndLine="44" EndColumn="65">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="45" StartColumn="5" EndLine="45" EndColumn="46">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="46" StartColumn="17" EndLine="46" EndColumn="109">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="47" StartColumn="17" EndLine="47" EndColumn="34">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="47" StartColumn="35" EndLine="47" EndColumn="47">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="48" StartColumn="13" EndLine="48" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="36" EndLine="42" EndColumn="38">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="49" StartColumn="13" EndLine="49" EndColumn="25">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="50" StartColumn="9" EndLine="50" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with Refix.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Collections.Generic;</Line>
        <Line Number="24">using System.Linq;</Line>
        <Line Number="25">using System.Reflection;</Line>
        <Line Number="26" />
        <Line Number="27">using Mono.Cecil;</Line>
        <Line Number="28" />
        <Line Number="29">namespace NinjaTurtles</Line>
        <Line Number="30">{</Line>
        <Line Number="31">    internal class TypeResolver</Line>
        <Line Number="32">    {</Line>
        <Line Number="33">        internal static Type ResolveTypeFromReferences(Assembly callingAssembly, string className)</Line>
        <Line Number="34">        {</Line>
        <Line Number="35">            return ResolveTypeFromReferences(callingAssembly, className, new List&lt;string&gt;());</Line>
        <Line Number="36">        }</Line>
        <Line Number="37" />
        <Line Number="38">        private static Type ResolveTypeFromReferences(Assembly assembly, string className, IList&lt;string&gt; consideredAssemblies)</Line>
        <Line Number="39">        {</Line>
        <Line Number="40">            var type = assembly.GetTypes().SingleOrDefault(t =&gt; t.FullName == className);</Line>
        <Line Number="41">            if (type != null) return type;</Line>
        <Line Number="42">            foreach (var reference in assembly.GetReferencedAssemblies())</Line>
        <Line Number="43">            {</Line>
        <Line Number="44">                if (consideredAssemblies.Contains(reference.Name)) continue;</Line>
        <Line Number="45">                consideredAssemblies.Add(reference.Name);</Line>
        <Line Number="46">                type = ResolveTypeFromReferences(Assembly.Load(reference), className, consideredAssemblies);</Line>
        <Line Number="47">                if (type != null) return type;</Line>
        <Line Number="48">            }</Line>
        <Line Number="49">            return null;</Line>
        <Line Number="50">        }</Line>
        <Line Number="51">    }</Line>
        <Line Number="52">}</Line>
        <Line Number="53" />
      </Lines>
    </SourceFile>
  </SourceFiles>
</MutationTestingReport>