<?xml version="1.0" encoding="utf-8"?>
<MutationTestingReport xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <SourceFiles>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\TypeResolver.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0000: deleting Newobj, Stloc, Ldloc, Ldarg, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="54" StartColumn="13" EndLine="54" EndColumn="30">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0047: deleting Ldloc, Ldnull, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0053: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0055: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0055: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0055: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0047: read substitution Type.V0 =&gt; Type.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="59" StartColumn="39" EndLine="59" EndColumn="73">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>007f: deleting Ldarg, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0087: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008a: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007f: read substitution Assembly.P0 =&gt; Assembly.V2</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="52" StartColumn="13" EndLine="52" EndColumn="102">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000e: deleting Ldsfld, Ldstr, Ldloc, Ldfld, Ldarg, Callvirt, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001e: read substitution Assembly.P0 =&gt; Assembly.V2</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="59" StartColumn="22" EndLine="59" EndColumn="35">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>008c: deleting Ldloc, Ldloc, Ldelem_Ref, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="61" StartColumn="5" EndLine="61" EndColumn="55">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00a4: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: deleting Ldarg, Ldloc, Callvirt, Callvirt, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00a6: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00a6: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00a6: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="63" StartColumn="17" EndLine="63" EndColumn="72">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00b7: deleting Ldloc, Call, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="64" StartColumn="17" EndLine="64" EndColumn="103">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00be: deleting Ldloc, Ldloc, Ldfld, Ldarg, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cb: write substitution Type.V0 =&gt; Type.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00be: read substitution Assembly.V2 =&gt; Assembly.P0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="65" StartColumn="17" EndLine="65" EndColumn="34">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00d8: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cc: deleting Ldloc, Ldnull, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00da: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00da: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00da: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cc: read substitution Type.V0 =&gt; Type.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="59" StartColumn="36" EndLine="59" EndColumn="38">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00e9: deleting Ldloc, Ldloc, Ldlen, Conv_I4, Clt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f3: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f5: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f5: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f5: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="53" StartColumn="13" EndLine="53" EndColumn="90">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>002f: deleting Ldarg, Callvirt, Ldloc, Ldftn, Newobj, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0046: write substitution Type.V0 =&gt; Type.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: read substitution Assembly.P0 =&gt; Assembly.V2</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="56" StartColumn="17" EndLine="56" EndColumn="98">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0058: deleting Ldsfld, Ldstr, Ldloc, Ldfld, Ldarg, Callvirt, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: read substitution Assembly.P0 =&gt; Assembly.V2</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="57" StartColumn="17" EndLine="57" EndColumn="29">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0079: deleting Ldloc, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007a: write substitution Type.V4 =&gt; Type.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007c: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0079: read substitution Type.V0 =&gt; Type.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="61" StartColumn="56" EndLine="61" EndColumn="65">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00a8: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00a8: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="62" StartColumn="5" EndLine="62" EndColumn="46">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00aa: deleting Ldarg, Ldloc, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="67" StartColumn="21" EndLine="67" EndColumn="33">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00dd: deleting Ldloc, Stloc, Leave</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00de: write substitution Type.V4 =&gt; Type.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00dd: read substitution Type.V0 =&gt; Type.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="69" StartColumn="13" EndLine="69" EndColumn="14">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00e3: deleting Ldloc, Ldc_I4, Add, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e6: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e6: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e6: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e6: Add =&gt; Rem</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="70" StartColumn="13" EndLine="70" EndColumn="25">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00f7: deleting Ldnull, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f8: write substitution Type.V4 =&gt; Type.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="51" StartColumn="3" EndLine="51" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="55" StartColumn="13" EndLine="55" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="59" StartColumn="13" EndLine="59" EndColumn="20">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="60" StartColumn="13" EndLine="60" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="66" StartColumn="17" EndLine="66" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="71" StartColumn="9" EndLine="71" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="42" StartColumn="13" EndLine="42" EndColumn="99">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>001d: deleting Ldarg, Ldarg, Newobj, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0029: write substitution Type.V0 =&gt; Type.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="41" EndColumn="105">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldsfld, Ldstr, Ldarg, Ldarg, Callvirt, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="43" StartColumn="13" EndLine="43" EndColumn="30">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>002a: deleting Ldloc, Ldnull, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0035: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002a: read substitution Type.V0 =&gt; Type.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="45" StartColumn="17" EndLine="45" EndColumn="71">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0039: deleting Ldsfld, Ldstr, Ldarg, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="47" StartColumn="13" EndLine="47" EndColumn="25">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>004c: write substitution Type.V1 =&gt; Type.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>004b: read substitution Type.V0 =&gt; Type.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="40" StartColumn="3" EndLine="40" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="13" EndLine="44" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="46" StartColumn="13" EndLine="46" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="48" StartColumn="3" EndLine="48" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Collections.Generic;</Line>
        <Line Number="24">using System.Linq;</Line>
        <Line Number="25">using System.Reflection;</Line>
        <Line Number="26" />
        <Line Number="27">using NLog;</Line>
        <Line Number="28" />
        <Line Number="29">namespace NinjaTurtles</Line>
        <Line Number="30">{</Line>
        <Line Number="31">    internal class TypeResolver</Line>
        <Line Number="32">    {</Line>
        <Line Number="33">        #region Logging</Line>
        <Line Number="34" />
        <Line Number="35">        private static Logger _log = LogManager.GetCurrentClassLogger();</Line>
        <Line Number="36" />
        <Line Number="37">        #endregion</Line>
        <Line Number="38">        </Line>
        <Line Number="39">        internal static Type ResolveTypeFromReferences(Assembly callingAssembly, string className)</Line>
        <Line Number="40">        {</Line>
        <Line Number="41">            _log.Debug("Resolving type \"{0}\" in \"{1}\".", className, callingAssembly.GetName().Name);</Line>
        <Line Number="42">            Type type = ResolveTypeFromReferences(callingAssembly, className, new List&lt;string&gt;());</Line>
        <Line Number="43">            if (type == null)</Line>
        <Line Number="44">            {</Line>
        <Line Number="45">                _log.Error("Could not find type \"{0}\".", className);</Line>
        <Line Number="46">            }</Line>
        <Line Number="47">            return type;</Line>
        <Line Number="48">        }</Line>
        <Line Number="49">        </Line>
        <Line Number="50">        private static Type ResolveTypeFromReferences(Assembly assembly, string className, IList&lt;string&gt; consideredAssemblies)</Line>
        <Line Number="51">        {</Line>
        <Line Number="52">            _log.Trace("Searching for type \"{0}\" in \"{1}\".", className, assembly.GetName().Name);</Line>
        <Line Number="53">            var type = assembly.GetTypes().SingleOrDefault(t =&gt; t.FullName == className);</Line>
        <Line Number="54">            if (type != null)</Line>
        <Line Number="55">            {</Line>
        <Line Number="56">                _log.Trace("Found type \"{0}\" in \"{1}\".", className, assembly.GetName().Name);</Line>
        <Line Number="57">                return type;</Line>
        <Line Number="58">            }</Line>
        <Line Number="59">            foreach (var reference in assembly.GetReferencedAssemblies())</Line>
        <Line Number="60">            {</Line>
        <Line Number="61">                if (consideredAssemblies.Contains(reference.Name)) continue;</Line>
        <Line Number="62">                consideredAssemblies.Add(reference.Name);</Line>
        <Line Number="63">                Assembly referencedAssembly = Assembly.Load(reference);</Line>
        <Line Number="64">                type = ResolveTypeFromReferences(referencedAssembly, className, consideredAssemblies);</Line>
        <Line Number="65">                if (type != null)</Line>
        <Line Number="66">                {</Line>
        <Line Number="67">                    return type;</Line>
        <Line Number="68">                }</Line>
        <Line Number="69">            }</Line>
        <Line Number="70">            return null;</Line>
        <Line Number="71">        }</Line>
        <Line Number="72">    }</Line>
        <Line Number="73">}</Line>
        <Line Number="74" />
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\Turtles\SequencePointDeletionTurtle.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="95" StartColumn="13" EndLine="95" EndColumn="59">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Callvirt, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002e: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0030: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0030: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0030: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="95" StartColumn="60" EndLine="95" EndColumn="73">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0032: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0034: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="96" StartColumn="13" EndLine="96" EndColumn="59">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0039: deleting Ldarg, Callvirt, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0067: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0066: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0044: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0044: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0044: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0067: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="96" StartColumn="60" EndLine="96" EndColumn="73">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>006a: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006c: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="97" StartColumn="13" EndLine="97" EndColumn="61">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0071: deleting Ldarg, Callvirt, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009f: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007c: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007c: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007c: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00a0: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00a0: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00a0: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009f: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="97" StartColumn="62" EndLine="97" EndColumn="75">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00a2: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00a4: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="98" StartColumn="13" EndLine="98" EndColumn="59">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00a9: deleting Ldarg, Callvirt, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00d7: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00d6: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00b4: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00b4: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00b4: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00d8: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00d8: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00d8: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00d7: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="98" StartColumn="60" EndLine="98" EndColumn="73">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00da: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00dc: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="101" StartColumn="13" EndLine="101" EndColumn="55">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00e1: deleting Ldarg, Callvirt, Call, Stloc, Ldloca, Call, Ldc_I4, Ceq, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00fc: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00fb: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00fd: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00fd: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00fd: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00fc: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="103" StartColumn="17" EndLine="104" EndColumn="76">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0103: deleting Ldarg, Callvirt, Ldarg, Callvirt, Call, Callvirt, Callvirt, Castclass, Callvirt, Ldarg, Callvirt, Ldarg, Callvirt, Call, Ldc_I4, Add, Callvirt, Callvirt, Ceq, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014b: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014a: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014c: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014c: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014c: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>013a: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>013a: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>013a: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>013a: Add =&gt; Rem</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014b: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="106" StartColumn="21" EndLine="106" EndColumn="92">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>017a: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014f: deleting Ldarg, Callvirt, Ldarg, Callvirt, Call, Ldc_I4, Add, Callvirt, Callvirt, Ldsfld, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0179: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>017b: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>017b: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>017b: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0161: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0161: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0161: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0161: Add =&gt; Rem</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>017a: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="108" StartColumn="25" EndLine="108" EndColumn="38">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>017e: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0180: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="114" StartColumn="13" EndLine="114" EndColumn="61">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0187: deleting Ldarg, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01b0: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01af: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>018d: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>018d: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>018d: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01b1: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01b1: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01b1: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01b0: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="116" StartColumn="17" EndLine="116" EndColumn="147">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01b4: deleting Ldarg, Callvirt, Ldarg, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Stloc, Ldloca, Call, Callvirt, Callvirt, Castclass, Callvirt, Ldstr, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0209: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0208: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01c0: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01c0: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01c0: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>020a: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>020a: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>020a: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0209: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="118" StartColumn="21" EndLine="118" EndColumn="34">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>020d: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>020f: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="122" StartColumn="13" EndLine="122" EndColumn="25">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0213: write substitution Boolean.V0 =&gt; Boolean.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="94" StartColumn="9" EndLine="94" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="102" StartColumn="13" EndLine="102" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="105" StartColumn="17" EndLine="105" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="107" StartColumn="21" EndLine="107" EndColumn="22">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="110" StartColumn="17" EndLine="110" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="111" StartColumn="13" EndLine="111" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="115" StartColumn="13" EndLine="115" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="117" StartColumn="17" EndLine="117" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="120" StartColumn="13" EndLine="120" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="123" StartColumn="9" EndLine="123" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System.Collections.Generic;</Line>
        <Line Number="23">using System.Linq;</Line>
        <Line Number="24" />
        <Line Number="25">using Mono.Cecil;</Line>
        <Line Number="26">using Mono.Cecil.Cil;</Line>
        <Line Number="27" />
        <Line Number="28">namespace NinjaTurtles.Turtles</Line>
        <Line Number="29">{</Line>
        <Line Number="30">    /// &lt;summary&gt;</Line>
        <Line Number="31">    /// An implementation of &lt;see cref="IMethodTurtle" /&gt; that removes from the</Line>
        <Line Number="32">    /// compiled IL each sequence point in turn (with the exception of</Line>
        <Line Number="33">    /// structurally vital ones and compiler generated ones).</Line>
        <Line Number="34">    /// &lt;/summary&gt;</Line>
        <Line Number="35">    public class SequencePointDeletionTurtle : MethodTurtleBase</Line>
        <Line Number="36">    {</Line>
        <Line Number="37">        /// &lt;summary&gt;</Line>
        <Line Number="38">        /// Performs the actual code mutations, returning each with</Line>
        <Line Number="39">        /// &lt;c&gt;yield&lt;/c&gt; for the calling code to use.</Line>
        <Line Number="40">        /// &lt;/summary&gt;</Line>
        <Line Number="41">        /// &lt;remarks&gt;</Line>
        <Line Number="42">        /// Implementing classes should yield the result obtained by calling</Line>
        <Line Number="43">        /// the &lt;see mref="DoYield" /&gt; method.</Line>
        <Line Number="44">        /// &lt;/remarks&gt;</Line>
        <Line Number="45">        /// &lt;param name="method"&gt;</Line>
        <Line Number="46">        /// A &lt;see cref="MethodDefinition" /&gt; for the method on which mutation</Line>
        <Line Number="47">        /// testing is to be carried out.</Line>
        <Line Number="48">        /// &lt;/param&gt;</Line>
        <Line Number="49">        /// &lt;param name="module"&gt;</Line>
        <Line Number="50">        /// A &lt;see cref="Module" /&gt; representing the main module of the</Line>
        <Line Number="51">        /// containing assembly.</Line>
        <Line Number="52">        /// &lt;/param&gt;</Line>
        <Line Number="53">        /// &lt;returns&gt;</Line>
        <Line Number="54">        /// An &lt;see cref="IEnumerable{T}" /&gt; of</Line>
        <Line Number="55">        /// &lt;see cref="MutantMetaData" /&gt; structures.</Line>
        <Line Number="56">        /// &lt;/returns&gt;</Line>
        <Line Number="57">        protected override IEnumerable&lt;MutantMetaData&gt; DoMutate(MethodDefinition method, Module module)</Line>
        <Line Number="58">        {</Line>
        <Line Number="59">            var sequence = new Dictionary&lt;int, OpCode&gt;();</Line>
        <Line Number="60">            int startIndex = -1;</Line>
        <Line Number="61">            for (int index = 0; index &lt; method.Body.Instructions.Count; index++)</Line>
        <Line Number="62">            {</Line>
        <Line Number="63">                var instruction = method.Body.Instructions[index];</Line>
        <Line Number="64">                if (instruction.SequencePoint != null)</Line>
        <Line Number="65">                {</Line>
        <Line Number="66">                    startIndex = index;</Line>
        <Line Number="67">                    sequence.Clear();</Line>
        <Line Number="68">                }</Line>
        <Line Number="69">                if (startIndex &gt;= 0)</Line>
        <Line Number="70">                {</Line>
        <Line Number="71">                    sequence.Add(index, instruction.OpCode);</Line>
        <Line Number="72">                }</Line>
        <Line Number="73">                if (index == method.Body.Instructions.Count - 1 || instruction.Next.SequencePoint != null)</Line>
        <Line Number="74">                {</Line>
        <Line Number="75">                    if (!ShouldDeleteSequence(method.Body, sequence)) continue;</Line>
        <Line Number="76" />
        <Line Number="77">                    OpCode originalOpCode = method.Body.Instructions[startIndex].OpCode;</Line>
        <Line Number="78">                    object originalOperand = method.Body.Instructions[startIndex].Operand;</Line>
        <Line Number="79">                    method.Body.Instructions[startIndex].OpCode = OpCodes.Br;</Line>
        <Line Number="80">                    method.Body.Instructions[startIndex].Operand = instruction.Next;</Line>
        <Line Number="81" />
        <Line Number="82">                    var codes = string.Join(", ", sequence.Values.Select(o =&gt; o.Code));</Line>
        <Line Number="83">                    var description = string.Format("{0:x4}: deleting {1}", GetOriginalOffset(startIndex), codes);</Line>
        <Line Number="84">                    MutantMetaData mutation = DoYield(method, module, description, startIndex);</Line>
        <Line Number="85">                    yield return mutation;</Line>
        <Line Number="86" />
        <Line Number="87">                    method.Body.Instructions[startIndex].OpCode = originalOpCode;</Line>
        <Line Number="88">                    method.Body.Instructions[startIndex].Operand = originalOperand;</Line>
        <Line Number="89">                }</Line>
        <Line Number="90">            }</Line>
        <Line Number="91">        }</Line>
        <Line Number="92" />
        <Line Number="93">        private bool ShouldDeleteSequence(MethodBody method, IDictionary&lt;int, OpCode&gt; opCodes)</Line>
        <Line Number="94">        {</Line>
        <Line Number="95">            if (opCodes.Values.All(o =&gt; o == OpCodes.Nop)) return false;</Line>
        <Line Number="96">            if (opCodes.Values.All(o =&gt; o == OpCodes.Pop)) return false;</Line>
        <Line Number="97">            if (opCodes.Values.All(o =&gt; o == OpCodes.Leave)) return false;</Line>
        <Line Number="98">            if (opCodes.Values.Any(o =&gt; o == OpCodes.Ret)) return false;</Line>
        <Line Number="99" />
        <Line Number="100">            // If just setting compiler-generated return variable in Debug mode, don't delete.</Line>
        <Line Number="101">            if (opCodes.Values.Last().Code == Code.Br)</Line>
        <Line Number="102">            {</Line>
        <Line Number="103">                if (((Instruction)method.Instructions[opCodes.Keys.Last()].Operand).Offset</Line>
        <Line Number="104">                    == method.Instructions[opCodes.Keys.Last() + 1].Offset)</Line>
        <Line Number="105">                {</Line>
        <Line Number="106">                    if (method.Instructions[opCodes.Keys.Last() + 2].OpCode == OpCodes.Ret)</Line>
        <Line Number="107">                    {</Line>
        <Line Number="108">                        return false;</Line>
        <Line Number="109">                    }</Line>
        <Line Number="110">                }</Line>
        <Line Number="111">            }</Line>
        <Line Number="112" />
        <Line Number="113">            // If calling base constructor, don't delete.</Line>
        <Line Number="114">            if (opCodes.Any(kv =&gt; kv.Value == OpCodes.Call))</Line>
        <Line Number="115">            {</Line>
        <Line Number="116">                if (((MethodReference)method.Instructions[opCodes.First(kv =&gt; kv.Value == OpCodes.Call).Key].Operand).Name == Methods.CONSTRUCTOR)</Line>
        <Line Number="117">                {</Line>
        <Line Number="118">                    return false;</Line>
        <Line Number="119">                }</Line>
        <Line Number="120">            }</Line>
        <Line Number="121" />
        <Line Number="122">            return true;</Line>
        <Line Number="123">        }</Line>
        <Line Number="124">    }</Line>
        <Line Number="125">}</Line>
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\Turtles\MethodTurtleBase.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="45" StartColumn="13" EndLine="45" EndColumn="46">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="9" EndLine="44" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="46" StartColumn="9" EndLine="46" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="126" StartColumn="13" EndLine="126" EndColumn="99">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Callvirt, Call, Newobj, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="127" StartColumn="13" EndLine="127" EndColumn="48">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0012: deleting Ldloc, Ldarg, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="128" StartColumn="13" EndLine="134" EndColumn="15">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>001f: write substitution MutantMetaData.V1 =&gt; MutantMetaData.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0042: write substitution MutantMetaData.V2 =&gt; MutantMetaData.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0020: read substitution MutantMetaData.V1 =&gt; MutantMetaData.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0028: read substitution MutantMetaData.V1 =&gt; MutantMetaData.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0030: read substitution MutantMetaData.V1 =&gt; MutantMetaData.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0038: read substitution MutantMetaData.V1 =&gt; MutantMetaData.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0041: read substitution MutantMetaData.V1 =&gt; MutantMetaData.V2</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="125" StartColumn="9" EndLine="125" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="135" StartColumn="9" EndLine="135" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Collections.Generic;</Line>
        <Line Number="24">using System.Globalization;</Line>
        <Line Number="25">using System.IO;</Line>
        <Line Number="26" />
        <Line Number="27">using Mono.Cecil;</Line>
        <Line Number="28">using Mono.Cecil.Cil;</Line>
        <Line Number="29">using Mono.Cecil.Rocks;</Line>
        <Line Number="30" />
        <Line Number="31">namespace NinjaTurtles.Turtles</Line>
        <Line Number="32">{</Line>
        <Line Number="33">    /// &lt;summary&gt;</Line>
        <Line Number="34">    /// An abstract base class for implementations of</Line>
        <Line Number="35">    /// &lt;see cref="IMethodTurtle" /&gt;.</Line>
        <Line Number="36">    /// &lt;/summary&gt;</Line>
        <Line Number="37">    public abstract class MethodTurtleBase : IMethodTurtle</Line>
        <Line Number="38">    {</Line>
        <Line Number="39">        private int[] _originalOffsets;</Line>
        <Line Number="40">        private Module _module;</Line>
        <Line Number="41">        private MethodDefinition _method;</Line>
        <Line Number="42" />
        <Line Number="43">        internal void MutantComplete(MutantMetaData metaData)</Line>
        <Line Number="44">        {</Line>
        <Line Number="45">            metaData.TestDirectory.Dispose();</Line>
        <Line Number="46">        }</Line>
        <Line Number="47" />
        <Line Number="48">        /// &lt;summary&gt;</Line>
        <Line Number="49">        /// Returns an &lt;see cref="IEnumerable{T}" /&gt; of detailed descriptions</Line>
        <Line Number="50">        /// of mutations, having first carried out the mutation in question and</Line>
        <Line Number="51">        /// saved the modified assembly under test to disk.</Line>
        <Line Number="52">        /// &lt;/summary&gt;</Line>
        <Line Number="53">        /// &lt;param name="method"&gt;</Line>
        <Line Number="54">        /// A &lt;see cref="MethodDefinition" /&gt; for the method on which mutation</Line>
        <Line Number="55">        /// testing is to be carried out.</Line>
        <Line Number="56">        /// &lt;/param&gt;</Line>
        <Line Number="57">        /// &lt;param name="module"&gt;</Line>
        <Line Number="58">        /// A &lt;see cref="Module" /&gt; representing the main module of the</Line>
        <Line Number="59">        /// containing assembly.</Line>
        <Line Number="60">        /// &lt;/param&gt;</Line>
        <Line Number="61">        /// &lt;param name="originalOffsets"&gt;</Line>
        <Line Number="62">        /// An array of the original IL offsets before macros were expanded.</Line>
        <Line Number="63">        /// &lt;/param&gt;</Line>
        <Line Number="64">        /// &lt;returns&gt;</Line>
        <Line Number="65">        /// An &lt;see cref="IEnumerable{T}" /&gt; of</Line>
        <Line Number="66">        /// &lt;see cref="MutantMetaData" /&gt; structures.</Line>
        <Line Number="67">        /// &lt;/returns&gt;</Line>
        <Line Number="68">        public IEnumerable&lt;MutantMetaData&gt; Mutate(MethodDefinition method, Module module, int[] originalOffsets)</Line>
        <Line Number="69">        {</Line>
        <Line Number="70">            _module = module;</Line>
        <Line Number="71">            _method = method;</Line>
        <Line Number="72">            _originalOffsets = originalOffsets;</Line>
        <Line Number="73">            method.Body.SimplifyMacros();</Line>
        <Line Number="74">            foreach (var mutation in DoMutate(method, module))</Line>
        <Line Number="75">            {</Line>
        <Line Number="76">                yield return mutation;</Line>
        <Line Number="77">            }</Line>
        <Line Number="78">            method.Body.OptimizeMacros();</Line>
        <Line Number="79">        }</Line>
        <Line Number="80" />
        <Line Number="81">        /// &lt;summary&gt;</Line>
        <Line Number="82">        /// Performs the actual code mutations, returning each with</Line>
        <Line Number="83">        /// &lt;c&gt;yield&lt;/c&gt; for the calling code to use.</Line>
        <Line Number="84">        /// &lt;/summary&gt;</Line>
        <Line Number="85">        /// &lt;remarks&gt;</Line>
        <Line Number="86">        /// Implementing classes should yield the result obtained by calling</Line>
        <Line Number="87">        /// the &lt;see mref="DoYield" /&gt; method.</Line>
        <Line Number="88">        /// &lt;/remarks&gt;</Line>
        <Line Number="89">        /// &lt;param name="method"&gt;</Line>
        <Line Number="90">        /// A &lt;see cref="MethodDefinition" /&gt; for the method on which mutation</Line>
        <Line Number="91">        /// testing is to be carried out.</Line>
        <Line Number="92">        /// &lt;/param&gt;</Line>
        <Line Number="93">        /// &lt;param name="module"&gt;</Line>
        <Line Number="94">        /// A &lt;see cref="Module" /&gt; representing the main module of the</Line>
        <Line Number="95">        /// containing assembly.</Line>
        <Line Number="96">        /// &lt;/param&gt;</Line>
        <Line Number="97">        /// &lt;returns&gt;</Line>
        <Line Number="98">        /// An &lt;see cref="IEnumerable{T}" /&gt; of</Line>
        <Line Number="99">        /// &lt;see cref="MutantMetaData" /&gt; structures.</Line>
        <Line Number="100">        /// &lt;/returns&gt;</Line>
        <Line Number="101">        protected abstract IEnumerable&lt;MutantMetaData&gt; DoMutate(MethodDefinition method, Module module);</Line>
        <Line Number="102" />
        <Line Number="103">        /// &lt;summary&gt;</Line>
        <Line Number="104">        /// A helper method that copies the test folder, and saves the mutated</Line>
        <Line Number="105">        /// assembly under test into it before returning an instance of</Line>
        <Line Number="106">        /// &lt;see cref="MutantMetaData" /&gt;.</Line>
        <Line Number="107">        /// &lt;/summary&gt;</Line>
        <Line Number="108">        /// &lt;param name="method"&gt;</Line>
        <Line Number="109">        /// A &lt;see cref="MethodDefinition" /&gt; for the method on which mutation</Line>
        <Line Number="110">        /// testing is to be carried out.</Line>
        <Line Number="111">        /// &lt;/param&gt;</Line>
        <Line Number="112">        /// &lt;param name="module"&gt;</Line>
        <Line Number="113">        /// A &lt;see cref="Module" /&gt; representing the main module of the</Line>
        <Line Number="114">        /// containing assembly.</Line>
        <Line Number="115">        /// &lt;/param&gt;</Line>
        <Line Number="116">        /// &lt;param name="description"&gt;</Line>
        <Line Number="117">        /// A description of the mutation that has been applied.</Line>
        <Line Number="118">        /// &lt;/param&gt;</Line>
        <Line Number="119">        /// &lt;param name="index"&gt;</Line>
        <Line Number="120">        /// The index of the (first) IL instruction at which the mutation was</Line>
        <Line Number="121">        /// applied.</Line>
        <Line Number="122">        /// &lt;/param&gt;</Line>
        <Line Number="123">        /// &lt;returns&gt;&lt;/returns&gt;</Line>
        <Line Number="124">        protected MutantMetaData DoYield(MethodDefinition method, Module module, string description, int index)</Line>
        <Line Number="125">        {</Line>
        <Line Number="126">            var testDirectory = new TestDirectory(Path.GetDirectoryName(module.AssemblyLocation));</Line>
        <Line Number="127">            testDirectory.SaveAssembly(module);</Line>
        <Line Number="128">            return new MutantMetaData</Line>
        <Line Number="129">            {</Line>
        <Line Number="130">                Description = description,</Line>
        <Line Number="131">                MethodDefinition = method,</Line>
        <Line Number="132">                TestDirectory = testDirectory,</Line>
        <Line Number="133">                ILIndex = index</Line>
        <Line Number="134">            };</Line>
        <Line Number="135">        }</Line>
        <Line Number="136" />
        <Line Number="137">        internal int GetOriginalOffset(int index)</Line>
        <Line Number="138">        {</Line>
        <Line Number="139">            return _originalOffsets[index];</Line>
        <Line Number="140">        }</Line>
        <Line Number="141" />
        <Line Number="142">        internal string GetOriginalSourceFileName(int index)</Line>
        <Line Number="143">        {</Line>
        <Line Number="144">            var sequencePoint = GetCurrentSequencePoint(index);</Line>
        <Line Number="145">            return Path.GetFileName(sequencePoint.Document.Url);</Line>
        <Line Number="146">        }</Line>
        <Line Number="147" />
        <Line Number="148">        internal SequencePoint GetCurrentSequencePoint(int index)</Line>
        <Line Number="149">        {</Line>
        <Line Number="150">            var instruction = _method.Body.Instructions[index];</Line>
        <Line Number="151">            while ((instruction.SequencePoint == null</Line>
        <Line Number="152">                || instruction.SequencePoint.StartLine == 0xfeefee) &amp;&amp; index &gt; 0)</Line>
        <Line Number="153">            {</Line>
        <Line Number="154">                index--;</Line>
        <Line Number="155">                instruction = _method.Body.Instructions[index];</Line>
        <Line Number="156">            }</Line>
        <Line Number="157">            var sequencePoint = instruction.SequencePoint;</Line>
        <Line Number="158">            return sequencePoint;</Line>
        <Line Number="159">        }</Line>
        <Line Number="160" />
        <Line Number="161">        internal string GetOriginalSourceCode(int index)</Line>
        <Line Number="162">        {</Line>
        <Line Number="163">            var sequencePoint = GetCurrentSequencePoint(index);</Line>
        <Line Number="164">            string result = "";</Line>
        <Line Number="165">            string[] sourceCode = _module.SourceFiles[sequencePoint.Document.Url];</Line>
        <Line Number="166">            int upperBound = Math.Min(sequencePoint.EndLine + 2, sourceCode.Length);</Line>
        <Line Number="167">            for (int line = Math.Max(sequencePoint.StartLine - 2, 1); line &lt;= upperBound; line++)</Line>
        <Line Number="168">            {</Line>
        <Line Number="169">                string sourceLine = sourceCode[line - 1].Replace("\t", "    ");</Line>
        <Line Number="170">                result += line.ToString(CultureInfo.InvariantCulture)</Line>
        <Line Number="171">                    .PadLeft(4, ' ') + ": " + sourceLine.TrimEnd(' ', '\t');</Line>
        <Line Number="172">                if (line &lt; upperBound) result += Environment.NewLine;</Line>
        <Line Number="173">            }</Line>
        <Line Number="174">            return result;</Line>
        <Line Number="175">        }</Line>
        <Line Number="176">    }</Line>
        <Line Number="177">}</Line>
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\TestDirectory.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="56" StartColumn="7" EndLine="56" EndColumn="67">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Callvirt, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: write substitution String.V0 =&gt; String.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="57" StartColumn="7" EndLine="57" EndColumn="53">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000d: deleting Ldarg, Ldfld, Ldloc, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0019: write substitution String.V1 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0013: read substitution String.V0 =&gt; String.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="58" StartColumn="13" EndLine="58" EndColumn="83">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>001a: deleting Ldsfld, Ldstr, Ldloc, Ldarg, Ldfld, Callvirt, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0024: read substitution String.V0 =&gt; String.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="59" StartColumn="13" EndLine="59" EndColumn="51">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0031: deleting Ldarg, Callvirt, Ldloc, Callvirt, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0037: read substitution String.V1 =&gt; String.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="55" StartColumn="3" EndLine="55" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="60" StartColumn="3" EndLine="60" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="50" StartColumn="13" EndLine="50" EndColumn="79">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0008: deleting Ldsfld, Ldstr, Ldarg, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="51" StartColumn="13" EndLine="51" EndColumn="58">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0019: deleting Ldarg, Ldarg, Ldfld, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="48" StartColumn="3" EndLine="48" EndColumn="53">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="49" StartColumn="3" EndLine="49" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="52" StartColumn="3" EndLine="52" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="89" StartColumn="13" EndLine="89" EndColumn="29">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000b: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="91" StartColumn="17" EndLine="91" EndColumn="24">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000f: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000f: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="95" StartColumn="17" EndLine="95" EndColumn="65">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0012: deleting Ldsfld, Ldstr, Ldarg, Ldfld, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="96" StartColumn="17" EndLine="96" EndColumn="49">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0028: deleting Ldarg, Ldfld, Ldc_I4, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="98" StartColumn="13" EndLine="98" EndColumn="33">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0038: deleting Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="100" StartColumn="17" EndLine="100" EndColumn="93">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>003a: deleting Ldstr, Ldarg, Ldfld, Call, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="101" StartColumn="17" EndLine="101" EndColumn="50">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>004b: deleting Ldsfld, Ldloc, Ldloc, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="88" StartColumn="3" EndLine="88" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="90" StartColumn="13" EndLine="90" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="94" StartColumn="13" EndLine="94" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="97" StartColumn="13" EndLine="97" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="99" StartColumn="13" EndLine="99" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="102" StartColumn="13" EndLine="102" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="103" StartColumn="3" EndLine="103" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="43" EndColumn="66">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0008: deleting Ldarg, Call, Ldstr, Call, Stloc, Ldloca, Ldstr, Call, Call, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="13" EndLine="44" EndColumn="61">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>002f: deleting Ldsfld, Ldstr, Ldarg, Ldfld, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="45" StartColumn="13" EndLine="45" EndColumn="48">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0045: deleting Ldarg, Ldfld, Call, Pop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="39" StartColumn="3" EndLine="39" EndColumn="25">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="40" StartColumn="3" EndLine="40" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="46" StartColumn="9" EndLine="46" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="65" StartColumn="25" EndLine="65" EndColumn="54">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0002: deleting Ldarg, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000a: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0002: read substitution String.P0 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0002: read substitution String.P0 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0002: read substitution String.P0 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0002: read substitution String.P0 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0002: read substitution String.P0 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0002: read substitution String.P0 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="65" StartColumn="13" EndLine="65" EndColumn="21">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000f: deleting Ldloc, Ldloc, Ldelem_Ref, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0014: write substitution String.V0 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0014: write substitution String.V0 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0014: write substitution String.V0 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0014: write substitution String.V0 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="67" StartColumn="8" EndLine="67" EndColumn="49">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0016: deleting Ldloc, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001c: write substitution String.V1 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001c: write substitution String.V1 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001c: write substitution String.V1 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001c: write substitution String.V1 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: read substitution String.V0 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: read substitution String.V0 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: read substitution String.V0 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: read substitution String.V0 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: read substitution String.V0 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: read substitution String.V0 =&gt; String.V3</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="68" StartColumn="17" EndLine="68" EndColumn="63">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>001d: deleting Ldsfld, Ldstr, Ldloc, Callvirt, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: read substitution String.V1 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: read substitution String.V1 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: read substitution String.V1 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: read substitution String.V1 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: read substitution String.V1 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: read substitution String.V1 =&gt; String.V3</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="69" StartColumn="17" EndLine="69" EndColumn="73">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>002e: deleting Ldarg, Ldloc, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0035: write substitution String.V2 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0035: write substitution String.V2 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0035: write substitution String.V2 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0035: write substitution String.V2 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002e: read substitution String.P1 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002e: read substitution String.P1 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002e: read substitution String.P1 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002e: read substitution String.P1 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002e: read substitution String.P1 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002e: read substitution String.P1 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: read substitution String.V1 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: read substitution String.V1 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: read substitution String.V1 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: read substitution String.V1 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: read substitution String.V1 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002f: read substitution String.V1 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="70" StartColumn="17" EndLine="70" EndColumn="41">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0036: deleting Ldloc, Ldloc, Call, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: read substitution String.V0 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: read substitution String.V0 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: read substitution String.V0 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: read substitution String.V0 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: read substitution String.V0 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0036: read substitution String.V0 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0037: read substitution String.V2 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0037: read substitution String.V2 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0037: read substitution String.V2 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0037: read substitution String.V2 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0037: read substitution String.V2 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0037: read substitution String.V2 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="71" StartColumn="4" EndLine="71" EndColumn="5">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>003f: deleting Ldloc, Ldc_I4, Add, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0042: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0042: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0042: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0042: Add =&gt; Rem</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="65" StartColumn="22" EndLine="65" EndColumn="24">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0045: deleting Ldloc, Ldloc, Ldlen, Conv_I4, Clt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>004f: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="72" StartColumn="33" EndLine="72" EndColumn="68">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0054: deleting Ldarg, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005c: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005f: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0054: read substitution String.P0 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0054: read substitution String.P0 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0054: read substitution String.P0 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0054: read substitution String.P0 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0054: read substitution String.P0 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0054: read substitution String.P0 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="74" StartColumn="8" EndLine="74" EndColumn="65">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0068: deleting Ldloc, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006e: write substitution String.V4 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006e: write substitution String.V4 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006e: write substitution String.V4 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006e: write substitution String.V4 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: read substitution String.V3 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: read substitution String.V3 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: read substitution String.V3 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: read substitution String.V3 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: read substitution String.V3 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: read substitution String.V3 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="72" StartColumn="13" EndLine="72" EndColumn="29">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0061: deleting Ldloc, Ldloc, Ldelem_Ref, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0066: write substitution String.V3 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0066: write substitution String.V3 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0066: write substitution String.V3 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0066: write substitution String.V3 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="75" StartColumn="17" EndLine="75" EndColumn="80">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0070: deleting Ldsfld, Ldstr, Ldloc, Callvirt, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007a: read substitution String.V4 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007a: read substitution String.V4 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007a: read substitution String.V4 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007a: read substitution String.V4 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007a: read substitution String.V4 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007a: read substitution String.V4 =&gt; String.V3</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="76" StartColumn="17" EndLine="76" EndColumn="81">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0082: deleting Ldarg, Ldloc, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008a: write substitution String.V2 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008a: write substitution String.V2 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008a: write substitution String.V2 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008a: write substitution String.V2 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0082: read substitution String.P1 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0082: read substitution String.P1 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0082: read substitution String.P1 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0082: read substitution String.P1 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0082: read substitution String.P1 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0083: read substitution String.V4 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0083: read substitution String.V4 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0083: read substitution String.V4 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0083: read substitution String.V4 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0083: read substitution String.V4 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0083: read substitution String.V4 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0082: read substitution String.P1 =&gt; String.V3</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="17" EndLine="77" EndColumn="51">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>008b: deleting Ldloc, Call, Pop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008b: read substitution String.V2 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008b: read substitution String.V2 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008b: read substitution String.V2 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008b: read substitution String.V2 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008b: read substitution String.V2 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008b: read substitution String.V2 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="78" StartColumn="5" EndLine="78" EndColumn="49">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0092: deleting Ldloc, Ldloc, Call, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0092: read substitution String.V3 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0092: read substitution String.V3 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0092: read substitution String.V3 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0092: read substitution String.V3 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: read substitution String.V2 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: read substitution String.V2 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: read substitution String.V2 =&gt; String.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: read substitution String.V2 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: read substitution String.V2 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0093: read substitution String.V2 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0092: read substitution String.V3 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0092: read substitution String.V3 =&gt; String.P1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="79" StartColumn="4" EndLine="79" EndColumn="5">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>009b: deleting Ldloc, Ldc_I4, Add, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Sub</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Mul</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Div</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009e: Add =&gt; Rem</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="72" StartColumn="30" EndLine="72" EndColumn="32">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00a1: deleting Ldloc, Ldloc, Ldlen, Conv_I4, Clt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ab: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ad: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ad: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00ad: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="64" StartColumn="3" EndLine="64" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="65" StartColumn="4" EndLine="65" EndColumn="11">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="66" StartColumn="4" EndLine="66" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="72" StartColumn="4" EndLine="72" EndColumn="11">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="73" StartColumn="4" EndLine="73" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="80" StartColumn="3" EndLine="80" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.IO;</Line>
        <Line Number="24" />
        <Line Number="25">using NLog;</Line>
        <Line Number="26" />
        <Line Number="27">namespace NinjaTurtles</Line>
        <Line Number="28">{</Line>
        <Line Number="29">    internal class TestDirectory : IDisposable</Line>
        <Line Number="30">    {</Line>
        <Line Number="31">        #region Logging</Line>
        <Line Number="32" />
        <Line Number="33">        private static Logger _log = LogManager.GetCurrentClassLogger();</Line>
        <Line Number="34" />
        <Line Number="35">        #endregion</Line>
        <Line Number="36" />
        <Line Number="37">        private readonly string _folder;</Line>
        <Line Number="38" />
        <Line Number="39">        public TestDirectory()</Line>
        <Line Number="40">        {</Line>
        <Line Number="41">            _folder = Path.Combine(Path.GetTempPath(),</Line>
        <Line Number="42">                                   "NinjaTurtles",</Line>
        <Line Number="43">                                   Guid.NewGuid().ToString("N"));</Line>
        <Line Number="44">            _log.Debug("Creating folder \"{0}\".", _folder);</Line>
        <Line Number="45">            Directory.CreateDirectory(_folder);</Line>
        <Line Number="46">        }</Line>
        <Line Number="47" />
        <Line Number="48">        public TestDirectory(string sourceFolder) : this()</Line>
        <Line Number="49">        {</Line>
        <Line Number="50">            _log.Debug("Copying contents from folder \"{0}\".", sourceFolder);</Line>
        <Line Number="51">            CopyDirectoryContents(sourceFolder, _folder);</Line>
        <Line Number="52">        }</Line>
        <Line Number="53" />
        <Line Number="54">        public void SaveAssembly(Module module)</Line>
        <Line Number="55">        {</Line>
        <Line Number="56">            string fileName = Path.GetFileName(module.AssemblyLocation);</Line>
        <Line Number="57">            string path = Path.Combine(_folder, fileName);</Line>
        <Line Number="58">            _log.Debug("Writing assembly \"{0}\" to \"{1}\".", fileName, _folder);</Line>
        <Line Number="59">            module.AssemblyDefinition.Write(path);</Line>
        <Line Number="60">        }</Line>
        <Line Number="61" />
        <Line Number="62">        private static void CopyDirectoryContents</Line>
        <Line Number="63">            (string directory, string targetDirectory)</Line>
        <Line Number="64">        {</Line>
        <Line Number="65">            foreach (var file in Directory.GetFiles(directory))</Line>
        <Line Number="66">            {</Line>
        <Line Number="67">                string fileName = Path.GetFileName(file);</Line>
        <Line Number="68">                _log.Trace("Copying file \"{0}\".", fileName);</Line>
        <Line Number="69">                string target = Path.Combine(targetDirectory, fileName);</Line>
        <Line Number="70">                File.Copy(file, target);</Line>
        <Line Number="71">            }</Line>
        <Line Number="72">            foreach (var subDirectory in Directory.GetDirectories(directory))</Line>
        <Line Number="73">            {</Line>
        <Line Number="74">                string subDirectoryName = Path.GetFileName(subDirectory);</Line>
        <Line Number="75">                _log.Trace("Creating subdirectory \"{0}\".", subDirectoryName);</Line>
        <Line Number="76">                string target = Path.Combine(targetDirectory, subDirectoryName);</Line>
        <Line Number="77">                Directory.CreateDirectory(target);</Line>
        <Line Number="78">                CopyDirectoryContents(subDirectory, target);</Line>
        <Line Number="79">            }</Line>
        <Line Number="80">        }</Line>
        <Line Number="81" />
        <Line Number="82">        public string FullName</Line>
        <Line Number="83">        {</Line>
        <Line Number="84">            get { return _folder; }</Line>
        <Line Number="85">        }</Line>
        <Line Number="86" />
        <Line Number="87">        public void Dispose()</Line>
        <Line Number="88">        {</Line>
        <Line Number="89">            if (DoNotDelete)</Line>
        <Line Number="90">            {</Line>
        <Line Number="91">                return;</Line>
        <Line Number="92">            }</Line>
        <Line Number="93">            try</Line>
        <Line Number="94">            {</Line>
        <Line Number="95">                _log.Debug("Deleting folder \"{0}\".", _folder);</Line>
        <Line Number="96">                Directory.Delete(_folder, true);</Line>
        <Line Number="97">            }</Line>
        <Line Number="98">            catch (Exception ex)</Line>
        <Line Number="99">            {</Line>
        <Line Number="100">                string message = string.Format("Failed to delete folder \"{0}\".", _folder);</Line>
        <Line Number="101">                _log.ErrorException(message, ex);</Line>
        <Line Number="102">            }</Line>
        <Line Number="103">        }</Line>
        <Line Number="104" />
        <Line Number="105">        public bool DoNotDelete { get; set; }</Line>
        <Line Number="106">    }</Line>
        <Line Number="107">}</Line>
        <Line Number="108" />
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\MutationTest.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="122" StartColumn="4" EndLine="122" EndColumn="69">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Ldarg, Ldarg, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0009: write substitution Boolean.V0 =&gt; Boolean.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="123" StartColumn="4" EndLine="123" EndColumn="27">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000a: deleting Ldloc, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000b: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000a: read substitution Boolean.V0 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000c: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="125" StartColumn="5" EndLine="125" EndColumn="41">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0010: deleting Ldarg, Call, Pop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="127" StartColumn="4" EndLine="127" EndColumn="37">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0018: deleting Ldarg, Call, Pop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="121" StartColumn="3" EndLine="121" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0000: deleting Newobj, Stloc, Ldloc, Ldarg, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="124" StartColumn="4" EndLine="124" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="126" StartColumn="4" EndLine="126" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="128" StartColumn="3" EndLine="128" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="75" StartColumn="7" EndLine="75" EndColumn="116">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0010: deleting Ldsfld, Ldstr, Ldc_I4, Callvirt, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="80" StartColumn="4" EndLine="80" EndColumn="47">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0048: deleting Ldarg, Call, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="82" StartColumn="13" EndLine="82" EndColumn="94">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>005b: deleting Ldloc, Callvirt, Callvirt, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006b: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006b: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006b: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="84" StartColumn="13" EndLine="84" EndColumn="58">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>009b: deleting Ldarg, Ldarg, Ldloc, Call, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="76" StartColumn="13" EndLine="76" EndColumn="81">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0021: deleting Ldloc, Ldstr, Ldnull, Callvirt, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="78" StartColumn="7" EndLine="78" EndColumn="19">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0041: deleting Ldloc, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="13" EndLine="77" EndColumn="77">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>002e: deleting Ldloc, Ldstr, Ldc_I4, Box, Ldc_I4, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="83" StartColumn="7" EndLine="83" EndColumn="45">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0090: deleting Ldarg, Newobj, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="81" StartColumn="13" EndLine="81" EndColumn="44">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>004f: deleting Ldarg, Ldfld, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="88" StartColumn="13" EndLine="88" EndColumn="27">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00ef: deleting Newobj, Stloc, Ldloc, Ldloc, Stfld</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e6: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="85" StartColumn="4" EndLine="85" EndColumn="18">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00a8: deleting Ldloc, Ldc_I4, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="91" StartColumn="17" EndLine="92" EndColumn="83">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0113: deleting Ldloc, Ldfld, Ldloc, Ldarg, Ldfld, Ldloc, Callvirt, Ldloc, Ldftn, Newobj, Call, Pop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="88" StartColumn="31" EndLine="88" EndColumn="48">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00d7: deleting Ldarg, Ldfld, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e4: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00e4: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="90" StartColumn="17" EndLine="90" EndColumn="85">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0100: deleting Ldloc, Ldloc, Call, Castclass, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="86" StartColumn="4" EndLine="86" EndColumn="21">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00b0: deleting Ldloc, Ldc_I4, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="87" StartColumn="38" EndLine="87" EndColumn="63">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00cf: deleting Ldarg, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="88" StartColumn="28" EndLine="88" EndColumn="30">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0144: deleting Ldloc, Brtrue, Leave, Ldloc, Ldnull, Ceq, Stloc, Ldloc, Brtrue, Ldloc, Callvirt, Nop, Endfinally</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>013b: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0146: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0146: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0146: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0153: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0153: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0153: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="98" StartColumn="13" EndLine="98" EndColumn="118">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0184: deleting Ldsfld, Ldstr, Ldc_I4, Callvirt, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="96" StartColumn="13" EndLine="96" EndColumn="70">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>016c: deleting Ldarg, Ldfld, Ldarg, Ldfld, Ldarg, Ldfld, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="101" StartColumn="17" EndLine="101" EndColumn="56">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01a3: deleting Ldloc, Ldstr, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="99" StartColumn="13" EndLine="99" EndColumn="45">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0195: deleting Ldloc, Ldnull, Ceq, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>019e: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01a0: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01a0: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01a0: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="95" StartColumn="13" EndLine="95" EndColumn="44">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>015f: deleting Ldarg, Ldfld, Ldloc, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="87" StartColumn="4" EndLine="87" EndColumn="37">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00b8: deleting Ldarg, Ldfld, Callvirt, Ldc_I4, Ceq, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cb: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cd: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cd: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cd: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="102" StartColumn="13" EndLine="102" EndColumn="14">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01b0: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01b0: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="112" StartColumn="5" EndLine="112" EndColumn="12">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01e8: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01e8: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="105" StartColumn="17" EndLine="105" EndColumn="99">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01b3: deleting Ldloc, Ldstr, Ldloc, Ldc_I4, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="109" StartColumn="4" EndLine="109" EndColumn="19">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01c9: deleting Ldloc, Ldfld, Ldc_I4, Ceq, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01d8: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01da: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01da: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01da: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="114" StartColumn="4" EndLine="114" EndColumn="21">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01f9: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01ea: deleting Ldloc, Ldfld, Ldc_I4, Cgt, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01fb: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01fb: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01fb: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="116" StartColumn="5" EndLine="116" EndColumn="46">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01fe: deleting Newobj, Throw</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="111" StartColumn="5" EndLine="111" EndColumn="67">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01dd: deleting Ldstr, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="107" StartColumn="13" EndLine="107" EndColumn="25">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>01c2: deleting Ldloc, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="74" StartColumn="3" EndLine="74" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="88" StartColumn="4" EndLine="88" EndColumn="11">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="89" StartColumn="4" EndLine="89" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="93" StartColumn="4" EndLine="93" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="100" StartColumn="13" EndLine="100" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="104" StartColumn="13" EndLine="104" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="106" StartColumn="13" EndLine="106" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="110" StartColumn="4" EndLine="110" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="115" StartColumn="4" EndLine="115" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="118" StartColumn="3" EndLine="118" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="132" StartColumn="13" EndLine="132" EndColumn="33">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000f: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Ldfld, Ldnull, Ceq, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: write substitution Boolean.V6 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: write substitution Boolean.V6 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: write substitution Boolean.V6 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0011: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0011: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0011: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000f: read substitution Boolean.V6 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000f: read substitution Boolean.V6 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000f: read substitution Boolean.V6 =&gt; Boolean.V5</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="132" StartColumn="34" EndLine="132" EndColumn="114">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0013: deleting Ldarg, Call, Call, Castclass, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="133" StartColumn="7" EndLine="133" EndColumn="92">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0028: deleting Ldarg, Ldfld, Ldarg, Ldarg, Ldfld, Ldarg, Ldfld, Callvirt, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="135" StartColumn="13" EndLine="135" EndColumn="29">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0041: deleting Ldloc, Callvirt, Pop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="136" StartColumn="4" EndLine="136" EndColumn="51">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0048: deleting Ldloc, Ldc_I4, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0053: write substitution Boolean.V1 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0053: write substitution Boolean.V1 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0053: write substitution Boolean.V1 =&gt; Boolean.V6</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="137" StartColumn="4" EndLine="137" EndColumn="22">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0054: deleting Ldc_I4, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="141" StartColumn="5" EndLine="141" EndColumn="23">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0057: deleting Ldloc, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005a: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0058: write substitution Boolean.V6 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0058: write substitution Boolean.V6 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0058: write substitution Boolean.V6 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005c: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005c: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005c: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0057: read substitution Boolean.V1 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0057: read substitution Boolean.V1 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0057: read substitution Boolean.V1 =&gt; Boolean.V6</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005a: read substitution Boolean.V6 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005a: read substitution Boolean.V6 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005a: read substitution Boolean.V6 =&gt; Boolean.V5</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="143" StartColumn="6" EndLine="143" EndColumn="41">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>005f: deleting Ldarg, Ldloc, Callvirt, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="145" StartColumn="5" EndLine="145" EndColumn="33">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>006d: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="149" StartColumn="13" EndLine="149" EndColumn="66">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>007d: deleting Ldloc, Brtrue, Ldloc, Br, Ldc_I4, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0084: write substitution Boolean.V3 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0084: write substitution Boolean.V3 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0084: write substitution Boolean.V3 =&gt; Boolean.V6</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007e: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007e: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>007e: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0081: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0080: read substitution Boolean.V1 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0080: read substitution Boolean.V1 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0080: read substitution Boolean.V1 =&gt; Boolean.V6</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="151" StartColumn="13" EndLine="155" EndColumn="37">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0085: deleting Ldstr, Ldarg, Callvirt, Ldloc, Brtrue, Ldstr, Br, Ldstr, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0091: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0091: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0091: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0098: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0090: read substitution Boolean.V3 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0090: read substitution Boolean.V3 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0090: read substitution Boolean.V3 =&gt; Boolean.V6</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="156" StartColumn="13" EndLine="156" EndColumn="109">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00a6: deleting Ldarg, Ldfld, Ldarg, Ldarg, Callvirt, Callvirt, Ldarg, Ldloc, Ldc_I4, Ceq, Callvirt, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00b9: read substitution Boolean.V3 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00b9: read substitution Boolean.V3 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00b9: read substitution Boolean.V3 =&gt; Boolean.V6</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="158" StartColumn="13" EndLine="158" EndColumn="33">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00c3: deleting Ldloc, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c9: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c7: write substitution Boolean.V6 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c7: write substitution Boolean.V6 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c7: write substitution Boolean.V6 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cb: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cb: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cb: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c3: read substitution Boolean.V3 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c3: read substitution Boolean.V3 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c3: read substitution Boolean.V3 =&gt; Boolean.V6</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c9: read substitution Boolean.V6 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c9: read substitution Boolean.V6 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00c9: read substitution Boolean.V6 =&gt; Boolean.V5</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="160" StartColumn="17" EndLine="160" EndColumn="59">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00ce: deleting Ldarg, Callvirt, Ldc_I4, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="161" StartColumn="17" EndLine="165" EndColumn="49">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00db: deleting Ldstr, Ldc_I4, Newarr, Stloc, Ldloc, Ldc_I4, Ldloc, Stelem_Ref, Ldloc, Ldc_I4, Ldarg, Ldarg, Callvirt, Callvirt, Stelem_Ref, Ldloc, Ldc_I4, Ldarg, Ldarg, Callvirt, Callvirt, Stelem_Ref, Ldloc, Ldc_I4, Ldarg, Callvirt, Stelem_Ref, Ldloc, Call, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="168" StartColumn="13" EndLine="168" EndColumn="39">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0122: deleting Ldloc, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="170" StartColumn="13" EndLine="170" EndColumn="45">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>012a: deleting Ldarg, Ldarg, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="171" StartColumn="13" EndLine="171" EndColumn="37">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0136: write substitution Boolean.V5 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0136: write substitution Boolean.V5 =&gt; Boolean.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0136: write substitution Boolean.V5 =&gt; Boolean.V6</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0132: read substitution Boolean.V3 =&gt; Boolean.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0132: read substitution Boolean.V3 =&gt; Boolean.V5</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0132: read substitution Boolean.V3 =&gt; Boolean.V6</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="131" StartColumn="3" EndLine="131" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="140" StartColumn="4" EndLine="140" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="142" StartColumn="5" EndLine="142" EndColumn="6">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="144" StartColumn="5" EndLine="144" EndColumn="6">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="146" StartColumn="4" EndLine="146" EndColumn="5">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="147" StartColumn="4" EndLine="147" EndColumn="9">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="147" StartColumn="10" EndLine="147" EndColumn="11">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="147" StartColumn="11" EndLine="147" EndColumn="12">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="159" StartColumn="13" EndLine="159" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="166" StartColumn="13" EndLine="166" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="172" StartColumn="3" EndLine="172" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Collections.Generic;</Line>
        <Line Number="24">using System.Diagnostics;</Line>
        <Line Number="25">using System.IO;</Line>
        <Line Number="26">using System.Linq;</Line>
        <Line Number="27">using System.Management;</Line>
        <Line Number="28">using System.Threading;</Line>
        <Line Number="29">using System.Threading.Tasks;</Line>
        <Line Number="30">using System.Xml.Serialization;</Line>
        <Line Number="31" />
        <Line Number="32">using Microsoft.Win32;</Line>
        <Line Number="33" />
        <Line Number="34">using Mono.Cecil;</Line>
        <Line Number="35" />
        <Line Number="36">using NinjaTurtles.Reporting;</Line>
        <Line Number="37">using NinjaTurtles.TestRunners;</Line>
        <Line Number="38">using NinjaTurtles.Turtles;</Line>
        <Line Number="39" />
        <Line Number="40">namespace NinjaTurtles</Line>
        <Line Number="41">{</Line>
        <Line Number="42">    internal class MutationTest : IMutationTest</Line>
        <Line Number="43">    {</Line>
        <Line Number="44">        private const string ERROR_REPORTING_KEY = @"SOFTWARE\Microsoft\Windows\Windows Error Reporting";</Line>
        <Line Number="45">        private const string ERROR_REPORTING_VALUE = "DontShowUI";</Line>
        <Line Number="46" />
        <Line Number="47">        private readonly IList&lt;Type&gt; _mutationsToApply = new List&lt;Type&gt;();</Line>
        <Line Number="48">        private readonly string _testAssemblyLocation;</Line>
        <Line Number="49">        private readonly Type[] _parameterTypes;</Line>
        <Line Number="50">        private readonly AssemblyDefinition _testAssembly;</Line>
        <Line Number="51">        private readonly TypeReference _targetTypeReference;</Line>
        <Line Number="52">        private Module _module;</Line>
        <Line Number="53">        private IEnumerable&lt;string&gt; _testsToRun;</Line>
        <Line Number="54">        private ITestRunner _runner;</Line>
        <Line Number="55">        private MutationTestingReport _report;</Line>
        <Line Number="56">        private ReportingStrategy _reportingStrategy = new NullReportingStrategy();</Line>
        <Line Number="57">        private string _reportFileName;</Line>
        <Line Number="58" />
        <Line Number="59">        internal MutationTest(string testAssemblyLocation, Type targetType, string targetMethod, Type[] parameterTypes)</Line>
        <Line Number="60">        {</Line>
        <Line Number="61">            TargetType = targetType;</Line>
        <Line Number="62">            TargetMethod = targetMethod;</Line>
        <Line Number="63">            _testAssemblyLocation = testAssemblyLocation;</Line>
        <Line Number="64">            _parameterTypes = parameterTypes;</Line>
        <Line Number="65">            _testAssembly = AssemblyDefinition.ReadAssembly(testAssemblyLocation);</Line>
        <Line Number="66">            _targetTypeReference = _testAssembly.MainModule.Import(targetType);</Line>
        <Line Number="67">        }</Line>
        <Line Number="68" />
        <Line Number="69">        public Type TargetType { get; private set; }</Line>
        <Line Number="70" />
        <Line Number="71">        public string TargetMethod { get; private set; }</Line>
        <Line Number="72" />
        <Line Number="73">        public void Run()</Line>
        <Line Number="74">        {</Line>
        <Line Number="75">            var key = Registry.LocalMachine.OpenSubKey(ERROR_REPORTING_KEY, RegistryKeyPermissionCheck.ReadWriteSubTree);</Line>
        <Line Number="76">            var errorReportingValue = key.GetValue(ERROR_REPORTING_VALUE, null);</Line>
        <Line Number="77">            key.SetValue(ERROR_REPORTING_VALUE, 1, RegistryValueKind.DWord);</Line>
        <Line Number="78">            key.Close();</Line>
        <Line Number="79" />
        <Line Number="80">            MethodDefinition method = ValidateMethod();</Line>
        <Line Number="81">            _module.LoadDebugInformation();</Line>
        <Line Number="82">            int[] originalOffsets = method.Body.Instructions.Select(i =&gt; i.Offset).ToArray();</Line>
        <Line Number="83">            _report = new MutationTestingReport();</Line>
        <Line Number="84">            _testsToRun = GetMatchingTestsOrFail(method);</Line>
        <Line Number="85">            int count = 0;</Line>
        <Line Number="86">            int failures = 0;</Line>
        <Line Number="87">            if (_mutationsToApply.Count == 0) PopulateDefaultTurtles();</Line>
        <Line Number="88">            foreach (var turtleType in _mutationsToApply)</Line>
        <Line Number="89">            {</Line>
        <Line Number="90">                var turtle = (MethodTurtleBase)Activator.CreateInstance(turtleType);</Line>
        <Line Number="91">                Parallel.ForEach(turtle.Mutate(method, _module, originalOffsets),</Line>
        <Line Number="92">                    mutation =&gt; RunMutation(turtle, mutation, ref failures, ref count));</Line>
        <Line Number="93">            }</Line>
        <Line Number="94" />
        <Line Number="95">            _report.RegisterMethod(method);</Line>
        <Line Number="96">            _reportingStrategy.WriteReport(_report, _reportFileName);</Line>
        <Line Number="97" />
        <Line Number="98">            key = Registry.LocalMachine.OpenSubKey(ERROR_REPORTING_KEY, RegistryKeyPermissionCheck.ReadWriteSubTree);</Line>
        <Line Number="99">            if (errorReportingValue == null)</Line>
        <Line Number="100">            {</Line>
        <Line Number="101">                key.DeleteValue(ERROR_REPORTING_VALUE);</Line>
        <Line Number="102">            }</Line>
        <Line Number="103">            else</Line>
        <Line Number="104">            {</Line>
        <Line Number="105">                key.SetValue(ERROR_REPORTING_VALUE, errorReportingValue, RegistryValueKind.DWord);</Line>
        <Line Number="106">            }</Line>
        <Line Number="107">            key.Close();</Line>
        <Line Number="108" />
        <Line Number="109">            if (count == 0)</Line>
        <Line Number="110">            {</Line>
        <Line Number="111">                Console.WriteLine("No valid mutations found (this is fine).");</Line>
        <Line Number="112">                return;</Line>
        <Line Number="113">            }</Line>
        <Line Number="114">            if (failures &gt; 0)</Line>
        <Line Number="115">            {</Line>
        <Line Number="116">                throw new MutationTestFailureException();</Line>
        <Line Number="117">            }</Line>
        <Line Number="118">        }</Line>
        <Line Number="119" />
        <Line Number="120">        private void RunMutation(MethodTurtleBase turtle, MutantMetaData mutation, ref int failures, ref int count)</Line>
        <Line Number="121">        {</Line>
        <Line Number="122">            bool testProcessFailed = CheckTestProcessFails(turtle, mutation);</Line>
        <Line Number="123">            if (!testProcessFailed)</Line>
        <Line Number="124">            {</Line>
        <Line Number="125">                Interlocked.Increment(ref failures);</Line>
        <Line Number="126">            }</Line>
        <Line Number="127">            Interlocked.Increment(ref count);</Line>
        <Line Number="128">        }</Line>
        <Line Number="129" />
        <Line Number="130">        private bool CheckTestProcessFails(MethodTurtleBase turtle, MutantMetaData mutation)</Line>
        <Line Number="131">        {</Line>
        <Line Number="132">            if (_runner == null) _runner = (ITestRunner)Activator.CreateInstance(MutationTestBuilder.TestRunner);</Line>
        <Line Number="133">            var process = _runner.GetRunnerProcess(mutation, _testAssemblyLocation, _testsToRun);</Line>
        <Line Number="134" />
        <Line Number="135">            process.Start();</Line>
        <Line Number="136">            bool exitedInTime = process.WaitForExit(30000);</Line>
        <Line Number="137">            int exitCode = -1;</Line>
        <Line Number="138" />
        <Line Number="139">            try</Line>
        <Line Number="140">            {</Line>
        <Line Number="141">                if (!exitedInTime)</Line>
        <Line Number="142">                {</Line>
        <Line Number="143">                    KillProcessAndChildren(process.Id);</Line>
        <Line Number="144">                }</Line>
        <Line Number="145">                exitCode = process.ExitCode;</Line>
        <Line Number="146">            }</Line>
        <Line Number="147">            catch {}</Line>
        <Line Number="148" />
        <Line Number="149">            bool testSuitePassed = exitCode == 0 &amp;&amp; exitedInTime;</Line>
        <Line Number="150" />
        <Line Number="151">            string result = string.Format("Mutant: {0}. {1}",</Line>
        <Line Number="152">                              mutation.Description,</Line>
        <Line Number="153">                              testSuitePassed</Line>
        <Line Number="154">                                  ? "Survived."</Line>
        <Line Number="155">                                : "Killed.");</Line>
        <Line Number="156">            _report.AddResult(turtle.GetCurrentSequencePoint(mutation.ILIndex), mutation, !testSuitePassed);</Line>
        <Line Number="157" />
        <Line Number="158">            if (testSuitePassed)</Line>
        <Line Number="159">            {</Line>
        <Line Number="160">                mutation.TestDirectory.DoNotDelete = true;</Line>
        <Line Number="161">                result = string.Format("{0}\nOriginal source code around surviving mutant (in {1}):\n{2}\nFiles left for inspection in: {3}",</Line>
        <Line Number="162">                    result,</Line>
        <Line Number="163">                    turtle.GetOriginalSourceFileName(mutation.ILIndex),</Line>
        <Line Number="164">                    turtle.GetOriginalSourceCode(mutation.ILIndex),</Line>
        <Line Number="165">                    mutation.TestDirectoryName);</Line>
        <Line Number="166">            }</Line>
        <Line Number="167" />
        <Line Number="168">            Console.WriteLine(result);</Line>
        <Line Number="169" />
        <Line Number="170">            turtle.MutantComplete(mutation);</Line>
        <Line Number="171">            return !testSuitePassed;</Line>
        <Line Number="172">        }</Line>
        <Line Number="173" />
        <Line Number="174">        private void KillProcessAndChildren(int pid)</Line>
        <Line Number="175">        {</Line>
        <Line Number="176">            using (var searcher = new ManagementObjectSearcher("Select * From Win32_Process Where ParentProcessID=" + pid))</Line>
        <Line Number="177">            using (ManagementObjectCollection moc = searcher.Get())</Line>
        <Line Number="178">            {</Line>
        <Line Number="179">                foreach (ManagementObject mo in moc)</Line>
        <Line Number="180">                {</Line>
        <Line Number="181">                    KillProcessAndChildren(Convert.ToInt32(mo["ProcessID"]));</Line>
        <Line Number="182">                }</Line>
        <Line Number="183">                try</Line>
        <Line Number="184">                {</Line>
        <Line Number="185">                    Process proc = Process.GetProcessById(pid);</Line>
        <Line Number="186">                    proc.Kill();</Line>
        <Line Number="187">                }</Line>
        <Line Number="188">                catch (ArgumentException) {}</Line>
        <Line Number="189">            }</Line>
        <Line Number="190">        }</Line>
        <Line Number="191" />
        <Line Number="192" />
        <Line Number="193">        private void PopulateDefaultTurtles()</Line>
        <Line Number="194">        {</Line>
        <Line Number="195">            foreach (var type in GetType().Assembly.GetTypes()</Line>
        <Line Number="196">                .Where(t =&gt; t.GetInterface("IMethodTurtle") != null</Line>
        <Line Number="197">                &amp;&amp; !t.IsAbstract))</Line>
        <Line Number="198">            {</Line>
        <Line Number="199">                _mutationsToApply.Add(type);</Line>
        <Line Number="200">            }</Line>
        <Line Number="201">        }</Line>
        <Line Number="202" />
        <Line Number="203">        private IEnumerable&lt;string&gt; GetMatchingTestsOrFail(MethodDefinition targetMethod)</Line>
        <Line Number="204">        {</Line>
        <Line Number="205">            var tests = new List&lt;string&gt;();</Line>
        <Line Number="206">            foreach (var type in _testAssembly.MainModule.Types)</Line>
        <Line Number="207">            {</Line>
        <Line Number="208">                foreach (var method in type.Methods)</Line>
        <Line Number="209">                {</Line>
        <Line Number="210">                    if (method.CustomAttributes</Line>
        <Line Number="211">                            .Any(a =&gt; HasMatchingMethodTestedAttribute(targetMethod, a)))</Line>
        <Line Number="212">                    {</Line>
        <Line Number="213">                        tests.Add(string.Format ("{0}.{1}", type.FullName, method.Name));</Line>
        <Line Number="214">                    }</Line>
        <Line Number="215" />
        <Line Number="216">                }</Line>
        <Line Number="217">            }</Line>
        <Line Number="218">            if (!tests.Any())</Line>
        <Line Number="219">            {</Line>
        <Line Number="220">                throw new MutationTestFailureException(</Line>
        <Line Number="221">                    "No matching tests were found to run.");</Line>
        <Line Number="222">            }</Line>
        <Line Number="223">            return tests;</Line>
        <Line Number="224">        }</Line>
        <Line Number="225" />
        <Line Number="226">        private bool HasMatchingMethodTestedAttribute(MethodDefinition targetMethod, CustomAttribute attribute)</Line>
        <Line Number="227">        {</Line>
        <Line Number="228">            if (attribute.AttributeType.Name != "MethodTestedAttribute") return false;</Line>
        <Line Number="229">            if ((string)attribute.ConstructorArguments[1].Value != targetMethod.Name) return false;</Line>
        <Line Number="230">            if (attribute.ConstructorArguments[0].Value is string</Line>
        <Line Number="231">                &amp;&amp; (string)attribute.ConstructorArguments[0].Value != _targetTypeReference.FullName)</Line>
        <Line Number="232">            {</Line>
        <Line Number="233">                return false;</Line>
        <Line Number="234">            }</Line>
        <Line Number="235">            if (attribute.ConstructorArguments[0].Value is TypeReference</Line>
        <Line Number="236">                &amp;&amp; ((TypeReference)attribute.ConstructorArguments[0].Value).FullName != _targetTypeReference.FullName)</Line>
        <Line Number="237">            {</Line>
        <Line Number="238">                return false;</Line>
        <Line Number="239">            }</Line>
        <Line Number="240">            if (_parameterTypes != null</Line>
        <Line Number="241">                &amp;&amp; attribute.HasProperties</Line>
        <Line Number="242">                &amp;&amp; attribute.Properties.Any(p =&gt; p.Name == "ParameterTypes")</Line>
        <Line Number="243">                &amp;&amp; !Enumerable.SequenceEqual(</Line>
        <Line Number="244">                    _parameterTypes.Select(t =&gt; t.Name),</Line>
        <Line Number="245">                    Array.ConvertAll((CustomAttributeArgument[])attribute.Properties.Single(p =&gt; p.Name == "ParameterTypes").Argument.Value, a =&gt; (TypeReference)a.Value)</Line>
        <Line Number="246">                        .Select(t =&gt; t.Name)))</Line>
        <Line Number="247">            {</Line>
        <Line Number="248">                return false;</Line>
        <Line Number="249">            }</Line>
        <Line Number="250">            return true;</Line>
        <Line Number="251">        }</Line>
        <Line Number="252" />
        <Line Number="253">        private MethodDefinition ValidateMethod()</Line>
        <Line Number="254">        {</Line>
        <Line Number="255">            _module = new Module(TargetType.Assembly.Location);</Line>
        <Line Number="256">            var type = _module.Definition.Types</Line>
        <Line Number="257">                .Single(t =&gt; t.FullName == TargetType.FullName);</Line>
        <Line Number="258">            return MethodDefinitionResolver.ResolveMethod(type, TargetMethod, _parameterTypes);</Line>
        <Line Number="259">        }</Line>
        <Line Number="260" />
        <Line Number="261">        public IMutationTest With&lt;T&gt;() where T : IMethodTurtle</Line>
        <Line Number="262">        {</Line>
        <Line Number="263">            _mutationsToApply.Add(typeof(T));</Line>
        <Line Number="264">            return this;</Line>
        <Line Number="265">        }</Line>
        <Line Number="266" />
        <Line Number="267">        /// &lt;summary&gt;</Line>
        <Line Number="268">        /// Sets the unit test runner to be used, which is an implementation of</Line>
        <Line Number="269">        /// &lt;see cref="ITestRunner" /&gt;. If none is specified, then the default</Line>
        <Line Number="270">        /// is to use &lt;see cref="NUnitTestRunner" /&gt;.</Line>
        <Line Number="271">        /// &lt;/summary&gt;</Line>
        <Line Number="272">        /// &lt;typeparam name="T"&gt;</Line>
        <Line Number="273">        /// A type that implements &lt;see cref="ITestRunner" /&gt;.</Line>
        <Line Number="274">        /// &lt;/typeparam&gt;</Line>
        <Line Number="275">        /// &lt;returns&gt;</Line>
        <Line Number="276">        /// The original &lt;see cref="IMutationTest" /&gt; instance to allow fluent</Line>
        <Line Number="277">        /// method chaining.</Line>
        <Line Number="278">        /// &lt;/returns&gt;</Line>
        <Line Number="279">        public IMutationTest UsingRunner&lt;T&gt;() where T : ITestRunner, new()</Line>
        <Line Number="280">        {</Line>
        <Line Number="281">            _runner = new T();</Line>
        <Line Number="282">            return this;</Line>
        <Line Number="283">        }</Line>
        <Line Number="284" />
        <Line Number="285">        public IMutationTest WriteReportTo(string fileName)</Line>
        <Line Number="286">        {</Line>
        <Line Number="287">            _reportingStrategy = new OverwriteReportingStrategy();</Line>
        <Line Number="288">            _reportFileName = fileName;</Line>
        <Line Number="289">            return this;</Line>
        <Line Number="290">        }</Line>
        <Line Number="291" />
        <Line Number="292">        public IMutationTest MergeReportTo(string fileName)</Line>
        <Line Number="293">        {</Line>
        <Line Number="294">            _reportingStrategy = new MergeReportingStrategy();</Line>
        <Line Number="295">            _reportFileName = fileName;</Line>
        <Line Number="296">            return this;</Line>
        <Line Number="297">        }</Line>
        <Line Number="298" />
        <Line Number="299">        private abstract class ReportingStrategy</Line>
        <Line Number="300">        {</Line>
        <Line Number="301">            public abstract void WriteReport(MutationTestingReport report, string fileName);</Line>
        <Line Number="302">        }</Line>
        <Line Number="303" />
        <Line Number="304">        private class NullReportingStrategy : ReportingStrategy</Line>
        <Line Number="305">        {</Line>
        <Line Number="306">            public override void WriteReport(MutationTestingReport report, string fileName) { }</Line>
        <Line Number="307">        }</Line>
        <Line Number="308" />
        <Line Number="309">        private class OverwriteReportingStrategy : ReportingStrategy</Line>
        <Line Number="310">        {</Line>
        <Line Number="311">            public override void WriteReport(MutationTestingReport report, string fileName)</Line>
        <Line Number="312">            {</Line>
        <Line Number="313">                using (var streamWriter = File.CreateText(fileName))</Line>
        <Line Number="314">                {</Line>
        <Line Number="315">                    new XmlSerializer(typeof(MutationTestingReport)).Serialize(streamWriter, report);</Line>
        <Line Number="316">                }</Line>
        <Line Number="317">            }</Line>
        <Line Number="318">        }</Line>
        <Line Number="319" />
        <Line Number="320">        private class MergeReportingStrategy : ReportingStrategy</Line>
        <Line Number="321">        {</Line>
        <Line Number="322">            public override void WriteReport(MutationTestingReport report, string fileName)</Line>
        <Line Number="323">            {</Line>
        <Line Number="324">                report.MergeFromFile(fileName);</Line>
        <Line Number="325">                using (var streamWriter = File.CreateText(fileName))</Line>
        <Line Number="326">                {</Line>
        <Line Number="327">                    new XmlSerializer(typeof(MutationTestingReport)).Serialize(streamWriter, report);</Line>
        <Line Number="328">                }</Line>
        <Line Number="329">            }</Line>
        <Line Number="330">        }</Line>
        <Line Number="331">    }</Line>
        <Line Number="332">}</Line>
        <Line Number="333" />
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\MutationTestBuilder.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="157" StartColumn="13" EndLine="157" EndColumn="65">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Call, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="158" StartColumn="13" EndLine="158" EndColumn="102">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0007: deleting Ldloc, Ldarg, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0008: read substitution String.P0 =&gt; String.P1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="160" StartColumn="13" EndLine="160" EndColumn="94">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0016: read substitution String.P1 =&gt; String.P0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="156" StartColumn="9" EndLine="156" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="161" StartColumn="9" EndLine="161" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Reflection;</Line>
        <Line Number="24" />
        <Line Number="25">using NinjaTurtles.TestRunners;</Line>
        <Line Number="26" />
        <Line Number="27">namespace NinjaTurtles</Line>
        <Line Number="28">{</Line>
        <Line Number="29">    /// &lt;summary&gt;</Line>
        <Line Number="30">    /// A static class used as the starting point for a fluent definition of</Line>
        <Line Number="31">    /// a set of mutation tests.</Line>
        <Line Number="32">    /// &lt;/summary&gt;</Line>
        <Line Number="33">    /// &lt;typeparam name="T"&gt;</Line>
        <Line Number="34">    /// The type to be tested.</Line>
        <Line Number="35">    /// &lt;/typeparam&gt;</Line>
        <Line Number="36">    /// &lt;example&gt;</Line>
        <Line Number="37">    /// &lt;para&gt;</Line>
        <Line Number="38">    /// This code creates and runs the default set of mutation tests for the</Line>
        <Line Number="39">    /// &lt;b&gt;ClassUnderTest&lt;/b&gt; class's &lt;b&gt;MethodUnderTest&lt;/b&gt; method:</Line>
        <Line Number="40">    /// &lt;/para&gt;</Line>
        <Line Number="41">    /// &lt;code lang="cs"&gt;</Line>
        <Line Number="42">    /// MutationTestBuilder&amp;lt;ClassUnderTest&amp;gt;</Line>
        <Line Number="43">    ///     .For("MethodUnderTest")</Line>
        <Line Number="44">    ///     .Run();</Line>
        <Line Number="45">    /// &lt;/code&gt;</Line>
        <Line Number="46">    /// &lt;code lang="vbnet"&gt;</Line>
        <Line Number="47">    /// Call MutationTestBuilder(Of ClassUnderTest) _</Line>
        <Line Number="48">    ///     .For("MethodUnderTest") _</Line>
        <Line Number="49">    ///     .Run</Line>
        <Line Number="50">    /// &lt;/code&gt;</Line>
        <Line Number="51">    /// &lt;code lang="cpp"&gt;</Line>
        <Line Number="52">    /// MutationTestBuilder&amp;lt;ClassUnderTest^&amp;gt;</Line>
        <Line Number="53">    ///     ::For("MethodUnderTest")</Line>
        <Line Number="54">    ///     -&gt;Run();</Line>
        <Line Number="55">    /// &lt;/code&gt;</Line>
        <Line Number="56">    /// &lt;para&gt;</Line>
        <Line Number="57">    /// When this code is included in a test, it causes the matching tests to</Line>
        <Line Number="58">    /// be run for each mutation that is found of the code under test. By</Line>
        <Line Number="59">    /// default, NinjaTurtles assumes it is running under NUnit, and thus uses</Line>
        <Line Number="60">    /// an NUnit runner to run the suite against the mutated code. This can be</Line>
        <Line Number="61">    /// changed using the fluent interface:</Line>
        <Line Number="62">    /// &lt;/para&gt;</Line>
        <Line Number="63">    /// &lt;code lang="cs"&gt;</Line>
        <Line Number="64">    /// MutationTestBuilder&amp;lt;ClassUnderTest&amp;gt;</Line>
        <Line Number="65">    ///     .For("MethodUnderTest")</Line>
        <Line Number="66">    ///     .UsingRunner&amp;lt;GallioTestRunner&amp;gt;()</Line>
        <Line Number="67">    ///     .Run();</Line>
        <Line Number="68">    /// &lt;/code&gt;</Line>
        <Line Number="69">    /// &lt;code lang="vbnet"&gt;</Line>
        <Line Number="70">    /// Call MutationTestBuilder(Of ClassUnderTest) _</Line>
        <Line Number="71">    ///     .For("MethodUnderTest") _</Line>
        <Line Number="72">    ///     .UsingRunner(Of GallioTestRunner)() _</Line>
        <Line Number="73">    ///     .Run</Line>
        <Line Number="74">    /// &lt;/code&gt;</Line>
        <Line Number="75">    /// &lt;code lang="cpp"&gt;</Line>
        <Line Number="76">    /// MutationTestBuilder&amp;lt;ClassUnderTest^&amp;gt;</Line>
        <Line Number="77">    ///     ::For("MethodUnderTest")</Line>
        <Line Number="78">    ///     -&gt;UsingRunner&amp;lt;GallioTestRunner^&amp;gt;()</Line>
        <Line Number="79">    ///     -&gt;Run();</Line>
        <Line Number="80">    /// &lt;/code&gt;</Line>
        <Line Number="81">    /// &lt;para&gt;</Line>
        <Line Number="82">    /// Alternatively, this option can be set across all tests in a fixture by</Line>
        <Line Number="83">    /// including this line in the test fixture's setup method:</Line>
        <Line Number="84">    /// &lt;/para&gt;</Line>
        <Line Number="85">    /// &lt;code lang="cs"&gt;</Line>
        <Line Number="86">    /// MutationTestBuilder.UseRunner&amp;lt;GallioTestRunner&amp;gt;();</Line>
        <Line Number="87">    /// &lt;/code&gt;</Line>
        <Line Number="88">    /// &lt;code lang="vbnet"&gt;</Line>
        <Line Number="89">    /// Call MutationTestBuilder.UseRunner(Of GallioTestRunner)</Line>
        <Line Number="90">    /// &lt;/code&gt;</Line>
        <Line Number="91">    /// &lt;code lang="cpp"&gt;</Line>
        <Line Number="92">    /// MutationTestBuilder::UseRunner&amp;lt;GallioTestRunner^&amp;gt;();</Line>
        <Line Number="93">    /// &lt;/code&gt;</Line>
        <Line Number="94">    /// &lt;/example&gt;</Line>
        <Line Number="95">    public sealed class MutationTestBuilder&lt;T&gt;</Line>
        <Line Number="96">    {</Line>
        <Line Number="97">        /// &lt;summary&gt;</Line>
        <Line Number="98">        /// Returns an &lt;see cref="IMutationTest" /&gt; instance allowing a fluent</Line>
        <Line Number="99">        /// definition of a set of mutation tests for a particular method.</Line>
        <Line Number="100">        /// &lt;/summary&gt;</Line>
        <Line Number="101">        /// &lt;param name="targetMethod"&gt;</Line>
        <Line Number="102">        /// The name of the method to mutate.</Line>
        <Line Number="103">        /// &lt;/param&gt;</Line>
        <Line Number="104">        /// &lt;param name="parameterTypes"&gt;</Line>
        <Line Number="105">        /// Optional parameter specifying an array of parameter types used to</Line>
        <Line Number="106">        /// identify a particular method overload.</Line>
        <Line Number="107">        /// &lt;/param&gt;</Line>
        <Line Number="108">        /// &lt;returns&gt;</Line>
        <Line Number="109">        /// An &lt;see cref="IMutationTest" /&gt; instance to allow fluent</Line>
        <Line Number="110">        /// method chaining.</Line>
        <Line Number="111">        /// &lt;/returns&gt;</Line>
        <Line Number="112">        public static IMutationTest For(string targetMethod, Type[] parameterTypes = null)</Line>
        <Line Number="113">        {</Line>
        <Line Number="114">            var callingAssembly = Assembly.GetCallingAssembly();</Line>
        <Line Number="115">            return MutationTestBuilder.For(callingAssembly.Location, typeof(T), targetMethod, parameterTypes);</Line>
        <Line Number="116">        }</Line>
        <Line Number="117">    }</Line>
        <Line Number="118" />
        <Line Number="119">    /// &lt;summary&gt;</Line>
        <Line Number="120">    /// A static class used as the starting point for a fluent definition of</Line>
        <Line Number="121">    /// a set of mutation tests.</Line>
        <Line Number="122">    /// &lt;/summary&gt;</Line>
        <Line Number="123">    /// &lt;remarks&gt;</Line>
        <Line Number="124">    /// For public classes, the generic &lt;see cref="MutationTestBuilder{T}" /&gt;</Line>
        <Line Number="125">    /// is to be prefered. See that class for full documentation.</Line>
        <Line Number="126">    /// &lt;/remarks&gt;</Line>
        <Line Number="127">    public sealed class MutationTestBuilder</Line>
        <Line Number="128">    {</Line>
        <Line Number="129">        internal static Type TestRunner { get; set; }</Line>
        <Line Number="130" />
        <Line Number="131">        static MutationTestBuilder()</Line>
        <Line Number="132">        {</Line>
        <Line Number="133">            TestRunner = typeof(NUnitTestRunner);</Line>
        <Line Number="134">        }</Line>
        <Line Number="135" />
        <Line Number="136">        /// &lt;summary&gt;</Line>
        <Line Number="137">        /// Returns an &lt;see cref="IMutationTest" /&gt; instance allowing a fluent</Line>
        <Line Number="138">        /// definition of a set of mutation tests for a particular method.</Line>
        <Line Number="139">        /// &lt;/summary&gt;</Line>
        <Line Number="140">        /// &lt;param name="targetClass"&gt;</Line>
        <Line Number="141">        /// The namespace-qualified name of the type for which mutation tests</Line>
        <Line Number="142">        /// are being defined.</Line>
        <Line Number="143">        /// &lt;/param&gt;</Line>
        <Line Number="144">        /// &lt;param name="targetMethod"&gt;</Line>
        <Line Number="145">        /// The name of the method to mutate.</Line>
        <Line Number="146">        /// &lt;/param&gt;</Line>
        <Line Number="147">        /// &lt;param name="parameterTypes"&gt;</Line>
        <Line Number="148">        /// Optional parameter specifying an array of parameter types used to</Line>
        <Line Number="149">        /// identify a particular method overload.</Line>
        <Line Number="150">        /// &lt;/param&gt;</Line>
        <Line Number="151">        /// &lt;returns&gt;</Line>
        <Line Number="152">        /// An &lt;see cref="IMutationTest" /&gt; instance to allow fluent</Line>
        <Line Number="153">        /// method chaining.</Line>
        <Line Number="154">        /// &lt;/returns&gt;</Line>
        <Line Number="155">        public static IMutationTest For(string targetClass, string targetMethod, Type[] parameterTypes = null)</Line>
        <Line Number="156">        {</Line>
        <Line Number="157">            var callingAssembly = Assembly.GetCallingAssembly();</Line>
        <Line Number="158">            Type resolvedType = TypeResolver.ResolveTypeFromReferences(callingAssembly, targetClass);</Line>
        <Line Number="159" />
        <Line Number="160">            return For(callingAssembly.Location, resolvedType, targetMethod, parameterTypes);</Line>
        <Line Number="161">        }</Line>
        <Line Number="162" />
        <Line Number="163">        internal static IMutationTest For(string callingAssemblyLocation, Type targetType, string targetMethod, Type[] parameterTypes)</Line>
        <Line Number="164">        {</Line>
        <Line Number="165">            return new MutationTest(callingAssemblyLocation, targetType, targetMethod, parameterTypes);</Line>
        <Line Number="166">        }</Line>
        <Line Number="167" />
        <Line Number="168">        /// &lt;summary&gt;</Line>
        <Line Number="169">        /// Specifies the implementation of &lt;see cref="ITestRunner" /&gt; to be</Line>
        <Line Number="170">        /// used to run the test suite for each mutant. By default, this will</Line>
        <Line Number="171">        /// be the &lt;see cref="NUnitTestRunner" /&gt;. This can still be overridden</Line>
        <Line Number="172">        /// on a per-test basis using the</Line>
        <Line Number="173">        /// &lt;see mref="IMutationTest.UsingRunner" /&gt; method.</Line>
        <Line Number="174">        /// &lt;/summary&gt;</Line>
        <Line Number="175">        /// &lt;typeparam name="T"&gt;</Line>
        <Line Number="176">        /// A type that implements &lt;see cref="ITestRunner" /&gt;.</Line>
        <Line Number="177">        /// &lt;/typeparam&gt;</Line>
        <Line Number="178">        public static void UseRunner&lt;T&gt;() where T : ITestRunner</Line>
        <Line Number="179">        {</Line>
        <Line Number="180">            TestRunner = typeof(T);</Line>
        <Line Number="181">        }</Line>
        <Line Number="182">    }</Line>
        <Line Number="183">}</Line>
        <Line Number="184" />
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\Module.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="76" StartColumn="13" EndLine="76" EndColumn="48">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Call, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="13" EndLine="77" EndColumn="32">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0008: deleting Ldloc, Ldnull, Ceq, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0011: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0013: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0013: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0013: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="33" EndLine="77" EndColumn="40">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0015: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0015: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="79" StartColumn="13" EndLine="79" EndColumn="44">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>001a: deleting Ldarg, Call, Ldloc, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="81" StartColumn="36" EndLine="83" EndColumn="39">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0028: deleting Ldarg, Call, Callvirt, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0082: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0038: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0038: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0038: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005c: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005c: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005c: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0082: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="81" StartColumn="22" EndLine="81" EndColumn="32">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0087: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>008f: deleting Newobj, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="85" StartColumn="17" EndLine="85" EndColumn="58">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0097: deleting Ldloc, Ldloc, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="86" StartColumn="17" EndLine="87" EndColumn="95">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>009f: deleting Ldloc, Ldloc, Ldfld, Callvirt, Ldloc, Ldftn, Newobj, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="89" StartColumn="17" EndLine="91" EndColumn="33">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00bf: deleting Ldloc, Callvirt, Callvirt, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Ldsfld, Brtrue, Ldnull, Ldftn, Newobj, Stsfld, Br, Ldsfld, Call, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cf: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cf: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f3: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00cf: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f3: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>00f3: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="44" EndLine="92" EndColumn="55">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0119: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0121: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0121: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="26" EndLine="92" EndColumn="40">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0123: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="94" StartColumn="21" EndLine="94" EndColumn="89">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>012c: deleting Ldarg, Call, Ldloc, Callvirt, Brtrue, Ldloc, Call, Ldc_I4, Ceq, Br, Ldc_I4, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0148: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0138: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0138: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0138: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0143: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014a: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014a: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>014a: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="96" StartColumn="25" EndLine="96" EndColumn="84">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>014d: deleting Ldarg, Call, Ldloc, Ldloc, Call, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="41" EndLine="92" EndColumn="43">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0162: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>016b: deleting Ldloc, Brtrue, Leave, Ldloc, Ldnull, Ceq, Stloc, Ldloc, Brtrue, Ldloc, Callvirt, Nop, Endfinally</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>016d: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>016d: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>016d: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>017a: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>017a: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>017a: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="81" StartColumn="33" EndLine="81" EndColumn="35">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0187: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0190: deleting Ldloc, Brtrue, Leave, Ldloc, Ldnull, Ceq, Stloc, Ldloc, Brtrue, Ldloc, Callvirt, Nop, Endfinally</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0192: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0192: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0192: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01a2: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01a2: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>01a2: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="75" StartColumn="9" EndLine="75" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="81" StartColumn="13" EndLine="81" EndColumn="20">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="84" StartColumn="13" EndLine="84" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="17" EndLine="92" EndColumn="24">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="93" StartColumn="17" EndLine="93" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="95" StartColumn="21" EndLine="95" EndColumn="22">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="97" StartColumn="21" EndLine="97" EndColumn="22">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="98" StartColumn="17" EndLine="98" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="99" StartColumn="13" EndLine="99" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="100" StartColumn="9" EndLine="100" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System.Collections.Generic;</Line>
        <Line Number="23">using System.IO;</Line>
        <Line Number="24">using System.Linq;</Line>
        <Line Number="25" />
        <Line Number="26">using Mono.Cecil;</Line>
        <Line Number="27">using Mono.Cecil.Cil;</Line>
        <Line Number="28">using Mono.Cecil.Mdb;</Line>
        <Line Number="29">using Mono.Cecil.Pdb;</Line>
        <Line Number="30" />
        <Line Number="31">namespace NinjaTurtles</Line>
        <Line Number="32">{</Line>
        <Line Number="33">    /// &lt;summary&gt;</Line>
        <Line Number="34">    /// Class representing the main module of a .NET assembly.</Line>
        <Line Number="35">    /// &lt;/summary&gt;</Line>
        <Line Number="36">    public class Module</Line>
        <Line Number="37">    {</Line>
        <Line Number="38">        /// &lt;summary&gt;</Line>
        <Line Number="39">        /// Initializes a new instance of the &lt;see cref="Module" /&gt; class.</Line>
        <Line Number="40">        /// &lt;/summary&gt;</Line>
        <Line Number="41">        /// &lt;param name="assemblyLocation"&gt;</Line>
        <Line Number="42">        /// The location on disk of the assembly whose main module is to be</Line>
        <Line Number="43">        /// loaded.</Line>
        <Line Number="44">        /// &lt;/param&gt;</Line>
        <Line Number="45">        public Module(string assemblyLocation)</Line>
        <Line Number="46">        {</Line>
        <Line Number="47">            AssemblyLocation = assemblyLocation;</Line>
        <Line Number="48">            AssemblyDefinition = AssemblyDefinition.ReadAssembly(assemblyLocation);</Line>
        <Line Number="49">            Definition = AssemblyDefinition.MainModule;</Line>
        <Line Number="50">            SourceFiles = new Dictionary&lt;string, string[]&gt;();</Line>
        <Line Number="51">        }</Line>
        <Line Number="52" />
        <Line Number="53">        /// &lt;summary&gt;</Line>
        <Line Number="54">        /// Gets the location on disk of the assembly.</Line>
        <Line Number="55">        /// &lt;/summary&gt;</Line>
        <Line Number="56">        public string AssemblyLocation { get; private set; }</Line>
        <Line Number="57" />
        <Line Number="58">        /// &lt;summary&gt;</Line>
        <Line Number="59">        /// Gets the &lt;see cref="AssemblyDefinition" /&gt;.</Line>
        <Line Number="60">        /// &lt;/summary&gt;</Line>
        <Line Number="61">        public AssemblyDefinition AssemblyDefinition { get; private set; }</Line>
        <Line Number="62" />
        <Line Number="63">        /// &lt;summary&gt;</Line>
        <Line Number="64">        /// Gets the &lt;see cref="ModuleDefinition" /&gt;.</Line>
        <Line Number="65">        /// &lt;/summary&gt;</Line>
        <Line Number="66">        public ModuleDefinition Definition { get; private set; }</Line>
        <Line Number="67" />
        <Line Number="68">        /// &lt;summary&gt;</Line>
        <Line Number="69">        /// Gets a dictionary of source code files with their contained lines</Line>
        <Line Number="70">        /// of code.</Line>
        <Line Number="71">        /// &lt;/summary&gt;</Line>
        <Line Number="72">        public IDictionary&lt;string, string[]&gt; SourceFiles { get; private set; } </Line>
        <Line Number="73" />
        <Line Number="74">        internal void LoadDebugInformation()</Line>
        <Line Number="75">        {</Line>
        <Line Number="76">            var reader = ResolveSymbolReader();</Line>
        <Line Number="77">            if (reader == null) return;</Line>
        <Line Number="78" />
        <Line Number="79">            Definition.ReadSymbols(reader);</Line>
        <Line Number="80" />
        <Line Number="81">            foreach (var method in Definition.Types</Line>
        <Line Number="82">                .SelectMany(t =&gt; t.Methods)</Line>
        <Line Number="83">                .Where(m =&gt; m.HasBody))</Line>
        <Line Number="84">            {</Line>
        <Line Number="85">                MethodDefinition capturedMethod = method;</Line>
        <Line Number="86">                reader.Read(capturedMethod.Body,</Line>
        <Line Number="87">                    o =&gt; capturedMethod.Body.Instructions.FirstOrDefault(i =&gt; i.Offset &gt;= o));</Line>
        <Line Number="88" />
        <Line Number="89">                var sourceFiles = method.Body.Instructions.Where(i =&gt; i.SequencePoint != null)</Line>
        <Line Number="90">                    .Select(i =&gt; i.SequencePoint.Document.Url)</Line>
        <Line Number="91">                    .Distinct();</Line>
        <Line Number="92">                foreach (var sourceFile in sourceFiles)</Line>
        <Line Number="93">                {</Line>
        <Line Number="94">                    if (!SourceFiles.ContainsKey(sourceFile) &amp;&amp; File.Exists(sourceFile))</Line>
        <Line Number="95">                    {</Line>
        <Line Number="96">                        SourceFiles.Add(sourceFile, File.ReadAllLines(sourceFile));</Line>
        <Line Number="97">                    }</Line>
        <Line Number="98">                }</Line>
        <Line Number="99">            }</Line>
        <Line Number="100">        }</Line>
        <Line Number="101" />
        <Line Number="102">        private ISymbolReader ResolveSymbolReader()</Line>
        <Line Number="103">        {</Line>
        <Line Number="104">            string symbolLocation = null;</Line>
        <Line Number="105">            string pdbLocation = Path.ChangeExtension(AssemblyLocation, "pdb");</Line>
        <Line Number="106">            string mdbLocation = AssemblyLocation + ".mdb";</Line>
        <Line Number="107">            ISymbolReaderProvider provider = null;</Line>
        <Line Number="108">            if (File.Exists(pdbLocation))</Line>
        <Line Number="109">            {</Line>
        <Line Number="110">                symbolLocation = pdbLocation;</Line>
        <Line Number="111">                provider = new PdbReaderProvider();</Line>
        <Line Number="112">            }</Line>
        <Line Number="113">            else if (File.Exists(mdbLocation))</Line>
        <Line Number="114">            {</Line>
        <Line Number="115">                symbolLocation = AssemblyLocation;</Line>
        <Line Number="116">                provider = new MdbReaderProvider();</Line>
        <Line Number="117">            }</Line>
        <Line Number="118">            if (provider == null) return null;</Line>
        <Line Number="119">            var reader = provider.GetSymbolReader(Definition, symbolLocation);</Line>
        <Line Number="120">            return reader;</Line>
        <Line Number="121">        }</Line>
        <Line Number="122">    }</Line>
        <Line Number="123">}</Line>
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\MethodTestedAttribute.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="47" StartColumn="4" EndLine="47" EndColumn="28">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0008: deleting Ldarg, Ldarg, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="48" StartColumn="4" EndLine="48" EndColumn="32">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0010: deleting Ldarg, Ldarg, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="45" StartColumn="9" EndLine="45" EndColumn="75">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="46" StartColumn="3" EndLine="46" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="49" StartColumn="3" EndLine="49" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="65" StartColumn="13" EndLine="65" EndColumn="115">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0008: deleting Call, Ldarg, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>000d: read substitution String.P1 =&gt; String.P2</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="66" StartColumn="4" EndLine="66" EndColumn="30">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0014: deleting Ldarg, Ldloc, Call, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="67" StartColumn="4" EndLine="67" EndColumn="32">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>001c: deleting Ldarg, Ldarg, Call, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001d: read substitution String.P2 =&gt; String.P1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="63" StartColumn="9" EndLine="63" EndColumn="77">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="64" StartColumn="3" EndLine="64" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="68" StartColumn="3" EndLine="68" EndColumn="4">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Reflection;</Line>
        <Line Number="24" />
        <Line Number="25">namespace NinjaTurtles</Line>
        <Line Number="26">{</Line>
        <Line Number="27">    /// &lt;summary&gt;</Line>
        <Line Number="28">    /// When applied to a unit test method, specifies a member of a class that</Line>
        <Line Number="29">    /// is tested by that method. This can be applied multiple times for a test</Line>
        <Line Number="30">    /// that exercises multiple methods.</Line>
        <Line Number="31">    /// &lt;/summary&gt;</Line>
        <Line Number="32">    [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)]</Line>
        <Line Number="33">    public class MethodTestedAttribute : Attribute</Line>
        <Line Number="34">    {</Line>
        <Line Number="35">        /// &lt;summary&gt;</Line>
        <Line Number="36">        /// Initializes a new instance of the</Line>
        <Line Number="37">        /// &lt;see cref="MethodTestedAttribute" /&gt; class.</Line>
        <Line Number="38">        /// &lt;/summary&gt;</Line>
        <Line Number="39">        /// &lt;param name="targetType"&gt;</Line>
        <Line Number="40">        /// The type for which the attributed class contains unit tests.</Line>
        <Line Number="41">        /// &lt;/param&gt;</Line>
        <Line Number="42">        /// &lt;param name="targetMethod"&gt;</Line>
        <Line Number="43">        /// The name of a method which is tested by the attributed unit test.</Line>
        <Line Number="44">        /// &lt;/param&gt;</Line>
        <Line Number="45">        public MethodTestedAttribute(Type targetType, string targetMethod)</Line>
        <Line Number="46">        {</Line>
        <Line Number="47">            TargetType = targetType;</Line>
        <Line Number="48">            TargetMethod = targetMethod;</Line>
        <Line Number="49">        }</Line>
        <Line Number="50" />
        <Line Number="51">        /// &lt;summary&gt;</Line>
        <Line Number="52">        /// Initializes a new instance of the</Line>
        <Line Number="53">        /// &lt;see cref="MethodTestedAttribute" /&gt; class. This overload is</Line>
        <Line Number="54">        /// designed to allow non-public class's methods to be tested.</Line>
        <Line Number="55">        /// &lt;/summary&gt;</Line>
        <Line Number="56">        /// &lt;param name="targetType"&gt;</Line>
        <Line Number="57">        /// The namespace-qualified name of the type for which the attributed</Line>
        <Line Number="58">        /// class contains unit tests.</Line>
        <Line Number="59">        /// &lt;/param&gt;</Line>
        <Line Number="60">        /// &lt;param name="targetMethod"&gt;</Line>
        <Line Number="61">        /// The name of a method which is tested by the attributed unit test.</Line>
        <Line Number="62">        /// &lt;/param&gt;</Line>
        <Line Number="63">        public MethodTestedAttribute(string targetType, string targetMethod)</Line>
        <Line Number="64">        {</Line>
        <Line Number="65">            Type resolvedType = TypeResolver.ResolveTypeFromReferences(Assembly.GetCallingAssembly(), targetType);</Line>
        <Line Number="66">            TargetType = resolvedType;</Line>
        <Line Number="67">            TargetMethod = targetMethod;</Line>
        <Line Number="68">        }</Line>
        <Line Number="69" />
        <Line Number="70">        internal Type TargetType { get; private set; }</Line>
        <Line Number="71" />
        <Line Number="72">        internal string TargetMethod { get; private set; }</Line>
        <Line Number="73" />
        <Line Number="74">        /// &lt;summary&gt;</Line>
        <Line Number="75">        /// Gets or sets a list of parameter types used to identify a</Line>
        <Line Number="76">        /// particular method overload.</Line>
        <Line Number="77">        /// &lt;/summary&gt;</Line>
        <Line Number="78">        public Type[] ParameterTypes { get; set; }</Line>
        <Line Number="79">    }</Line>
        <Line Number="80">}</Line>
        <Line Number="81" />
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\MethodDefinitionResolver.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0000: deleting Ldnull, Stloc, Newobj, Stloc, Ldloc, Ldarg, Stfld, Ldloc, Ldarg, Stfld</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0000: deleting Ldnull, Stloc, Newobj, Stloc, Ldloc, Ldarg, Stfld</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="62" StartColumn="13" EndLine="62" EndColumn="40">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0017: deleting Ldloc, Ldfld, Ldnull, Ceq, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0025: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0027: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="64" StartColumn="17" EndLine="64" EndColumn="100">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>002a: deleting Ldsfld, Ldstr, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="65" StartColumn="17" EndLine="65" EndColumn="66">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>003a: deleting Ldarg, Ldloc, Ldfld, Call, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0046: write substitution MethodDefinition.V3 =&gt; MethodDefinition.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0047: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="69" StartColumn="17" EndLine="74" EndColumn="70">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>004a: deleting Ldarg, Callvirt, Ldloc, Brtrue, Ldloc, Ldftn, Newobj, Stloc, Br, Ldloc, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: write substitution MethodDefinition.V0 =&gt; MethodDefinition.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0051: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="75" StartColumn="17" EndLine="75" EndColumn="117">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0069: deleting Ldsfld, Ldstr, Ldloc, Ldfld, Ldarg, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="76" StartColumn="17" EndLine="76" EndColumn="41">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0085: deleting Ldloc, Stloc, Leave</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0086: write substitution MethodDefinition.V3 =&gt; MethodDefinition.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0085: read substitution MethodDefinition.V0 =&gt; MethodDefinition.V3</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="80" StartColumn="17" EndLine="80" EndColumn="106">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>008b: deleting Ldsfld, Ldstr, Ldloc, Ldfld, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="81" StartColumn="17" EndLine="81" EndColumn="152">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00a1: deleting Ldstr, Ldloc, Ldfld, Call, Ldstr, Newobj, Throw</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="61" StartColumn="9" EndLine="61" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="63" StartColumn="13" EndLine="63" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="68" StartColumn="13" EndLine="68" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="78" StartColumn="13" EndLine="78" EndColumn="46">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="79" StartColumn="13" EndLine="79" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="83" StartColumn="9" EndLine="83" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="41" StartColumn="13" EndLine="41" EndColumn="101">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0010: deleting Ldsfld, Ldstr, Ldloc, Ldfld, Ldarg, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="44" StartColumn="17" EndLine="44" EndColumn="110">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>002d: deleting Ldarg, Callvirt, Ldloc, Brtrue, Ldloc, Ldftn, Newobj, Stloc, Br, Ldloc, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>004b: write substitution MethodDefinition.V0 =&gt; MethodDefinition.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0034: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0034: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0034: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="45" StartColumn="17" EndLine="45" EndColumn="117">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>004c: deleting Ldsfld, Ldstr, Ldloc, Ldfld, Ldarg, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="46" StartColumn="17" EndLine="46" EndColumn="41">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0068: deleting Ldloc, Stloc, Leave</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0069: write substitution MethodDefinition.V4 =&gt; MethodDefinition.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0068: read substitution MethodDefinition.V0 =&gt; MethodDefinition.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="48" StartColumn="13" EndLine="48" EndColumn="49">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>006d: deleting Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="50" StartColumn="17" EndLine="50" EndColumn="75">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>006f: deleting Ldloc, Callvirt, Ldstr, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0084: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0086: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0086: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0086: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="53" StartColumn="21" EndLine="53" EndColumn="125">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>009f: deleting Ldstr, Ldloc, Ldfld, Call, Ldstr, Newobj, Throw</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="52" StartColumn="21" EndLine="52" EndColumn="79">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0089: deleting Ldsfld, Ldstr, Ldloc, Ldfld, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="55" StartColumn="17" EndLine="55" EndColumn="73">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00ba: deleting Ldsfld, Ldstr, Ldloc, Ldfld, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="56" StartColumn="17" EndLine="56" EndColumn="119">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>00d0: deleting Ldstr, Ldloc, Ldfld, Call, Ldstr, Newobj, Throw</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="40" StartColumn="9" EndLine="40" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="43" StartColumn="13" EndLine="43" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="49" StartColumn="13" EndLine="49" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="51" StartColumn="17" EndLine="51" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="58" StartColumn="9" EndLine="58" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Linq;</Line>
        <Line Number="24" />
        <Line Number="25">using Mono.Cecil;</Line>
        <Line Number="26" />
        <Line Number="27">using NLog;</Line>
        <Line Number="28" />
        <Line Number="29">namespace NinjaTurtles</Line>
        <Line Number="30">{</Line>
        <Line Number="31">    internal class MethodDefinitionResolver</Line>
        <Line Number="32">    {</Line>
        <Line Number="33">        #region Logging</Line>
        <Line Number="34" />
        <Line Number="35">        private static Logger _log = LogManager.GetCurrentClassLogger();</Line>
        <Line Number="36" />
        <Line Number="37">        #endregion</Line>
        <Line Number="38" />
        <Line Number="39">        public static MethodDefinition ResolveMethod(TypeDefinition typeDefinition, string methodName)</Line>
        <Line Number="40">        {</Line>
        <Line Number="41">            _log.Debug("Resolving method \"{0}\" in \"{1}\".", methodName, typeDefinition.FullName);</Line>
        <Line Number="42">            try</Line>
        <Line Number="43">            {</Line>
        <Line Number="44">                MethodDefinition methodDefinition = typeDefinition.Methods.Single(m =&gt; m.Name == methodName);</Line>
        <Line Number="45">                _log.Debug("Method \"{0}\" successfully resolved in \"{1}\".", methodName, typeDefinition.FullName);</Line>
        <Line Number="46">                return methodDefinition;</Line>
        <Line Number="47">            }</Line>
        <Line Number="48">            catch (InvalidOperationException ex)</Line>
        <Line Number="49">            {</Line>
        <Line Number="50">                if (ex.Message == "Sequence contains no matching element")</Line>
        <Line Number="51">                {</Line>
        <Line Number="52">                    _log.Error("Method \"{0}\" is unrecognised.", methodName);</Line>
        <Line Number="53">                    throw new ArgumentException(string.Format("Method \"{0}\" is unrecognised.", methodName), "methodName");</Line>
        <Line Number="54">                }</Line>
        <Line Number="55">                _log.Error("Method \"{0}\" is overloaded.", methodName);</Line>
        <Line Number="56">                throw new ArgumentException(string.Format("Method \"{0}\" is overloaded.", methodName), "methodName");</Line>
        <Line Number="57">            }</Line>
        <Line Number="58">        }</Line>
        <Line Number="59" />
        <Line Number="60">        public static MethodDefinition ResolveMethod(TypeDefinition typeDefinition, string methodName, Type[] parameterTypes)</Line>
        <Line Number="61">        {</Line>
        <Line Number="62">            if (parameterTypes == null)</Line>
        <Line Number="63">            {</Line>
        <Line Number="64">                _log.Warn("\"ResolveMethod\" overload with parameter types called unnecessarily.");</Line>
        <Line Number="65">                return ResolveMethod(typeDefinition, methodName);</Line>
        <Line Number="66">            }</Line>
        <Line Number="67">            try</Line>
        <Line Number="68">            {</Line>
        <Line Number="69">                MethodDefinition methodDefinition =</Line>
        <Line Number="70">                    typeDefinition.Methods.Single(</Line>
        <Line Number="71">                        m =&gt; m.Name == methodName</Line>
        <Line Number="72">                            &amp;&amp; Enumerable.SequenceEqual(</Line>
        <Line Number="73">                                m.Parameters.Select(p =&gt; p.ParameterType.Name.Replace("TypeDefinition", "Type")),</Line>
        <Line Number="74">                                parameterTypes.Select(p =&gt; p.Name)));</Line>
        <Line Number="75">                _log.Debug("Method \"{0}\" successfully resolved in \"{1}\".", methodName, typeDefinition.FullName);</Line>
        <Line Number="76">                return methodDefinition;</Line>
        <Line Number="77">            }</Line>
        <Line Number="78">            catch (InvalidOperationException)</Line>
        <Line Number="79">            {</Line>
        <Line Number="80">                _log.Error("Method \"{0}\" with specified parameter types is unrecognised.", methodName);</Line>
        <Line Number="81">                throw new ArgumentException(string.Format("Method \"{0}\" with specified parameter types is unrecognised.", methodName), "methodName");</Line>
        <Line Number="82">            }</Line>
        <Line Number="83">        }</Line>
        <Line Number="84">    }</Line>
        <Line Number="85">}</Line>
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\InstructionExtensions.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="34" StartColumn="13" EndLine="34" EndColumn="50">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Callvirt, Ldsfld, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0015: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0014: write substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0016: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0015: read substitution Boolean.V1 =&gt; Boolean.V0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="34" StartColumn="51" EndLine="34" EndColumn="64">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0018: deleting Ldc_I4, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001a: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="35" StartColumn="13" EndLine="35" EndColumn="89">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0039: write substitution Boolean.V0 =&gt; Boolean.V1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="33" StartColumn="9" EndLine="33" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="36" StartColumn="9" EndLine="36" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Linq;</Line>
        <Line Number="24" />
        <Line Number="25">using Mono.Cecil;</Line>
        <Line Number="26">using Mono.Cecil.Cil;</Line>
        <Line Number="27" />
        <Line Number="28">namespace NinjaTurtles</Line>
        <Line Number="29">{</Line>
        <Line Number="30">    internal static class InstructionExtensions</Line>
        <Line Number="31">    {</Line>
        <Line Number="32">        internal static  bool IsMeaninglessUnconditionalBranch(this Instruction instruction)</Line>
        <Line Number="33">        {</Line>
        <Line Number="34">            if (instruction.OpCode != OpCodes.Br) return false;</Line>
        <Line Number="35">            return ((Instruction)instruction.Operand).Offset == instruction.Next.Offset;</Line>
        <Line Number="36">        }</Line>
        <Line Number="37" />
        <Line Number="38">        internal static bool FollowsSequence(this Instruction instruction, params OpCode[] sequence)</Line>
        <Line Number="39">        {</Line>
        <Line Number="40">            if (instruction.OpCode != sequence[0]) return false;</Line>
        <Line Number="41">            if (sequence.Length == 1) return true;</Line>
        <Line Number="42">            var newSequence = new OpCode[sequence.Length - 1];</Line>
        <Line Number="43">            Array.Copy(sequence, 1, newSequence, 0, newSequence.Length);</Line>
        <Line Number="44">            return instruction.Next.FollowsSequence(newSequence);</Line>
        <Line Number="45">        }</Line>
        <Line Number="46" />
        <Line Number="47">        internal static bool IsPartOfSequence(this Instruction instruction, params OpCode[] sequence)</Line>
        <Line Number="48">        {</Line>
        <Line Number="49">            if (!sequence.Distinct().Contains(instruction.OpCode)) return false;</Line>
        <Line Number="50">            var startInstruction = instruction;</Line>
        <Line Number="51">            for (int i = 0; i &lt; sequence.Length; i++)</Line>
        <Line Number="52">            {</Line>
        <Line Number="53">                if (startInstruction == null) break;</Line>
        <Line Number="54">                if (startInstruction.FollowsSequence(sequence)) return true;</Line>
        <Line Number="55">                startInstruction = startInstruction.Previous;</Line>
        <Line Number="56">            }</Line>
        <Line Number="57">            return false;</Line>
        <Line Number="58">        }</Line>
        <Line Number="59" />
        <Line Number="60">        internal static bool IsPartOfCompilerGeneratedDispose(this Instruction instruction)</Line>
        <Line Number="61">        {</Line>
        <Line Number="62">            if (instruction.IsPartOfSequence(OpCodes.Leave,</Line>
        <Line Number="63">                OpCodes.Ldloc, OpCodes.Ldnull, OpCodes.Ceq,</Line>
        <Line Number="64">                OpCodes.Stloc, OpCodes.Ldloc, OpCodes.Brtrue,</Line>
        <Line Number="65">                OpCodes.Ldloc, OpCodes.Callvirt))</Line>
        <Line Number="66">            {</Line>
        <Line Number="67">                while (instruction.OpCode != OpCodes.Callvirt)</Line>
        <Line Number="68">                {</Line>
        <Line Number="69">                    instruction = instruction.Next;</Line>
        <Line Number="70">                }</Line>
        <Line Number="71">                var method = ((MethodReference)instruction.Operand);</Line>
        <Line Number="72">                return method.Name == "Dispose";</Line>
        <Line Number="73">            }</Line>
        <Line Number="74">            if (instruction.IsPartOfSequence(OpCodes.Leave,</Line>
        <Line Number="75">                OpCodes.Ldloc, OpCodes.Ldnull, OpCodes.Ceq,</Line>
        <Line Number="76">                OpCodes.Brtrue,</Line>
        <Line Number="77">                OpCodes.Ldloc, OpCodes.Callvirt))</Line>
        <Line Number="78">            {</Line>
        <Line Number="79">                while (instruction.OpCode != OpCodes.Callvirt)</Line>
        <Line Number="80">                {</Line>
        <Line Number="81">                    instruction = instruction.Next;</Line>
        <Line Number="82">                }</Line>
        <Line Number="83">                var method = ((MethodReference)instruction.Operand);</Line>
        <Line Number="84">                return method.Name == "Dispose";</Line>
        <Line Number="85">            }</Line>
        <Line Number="86">            return false;</Line>
        <Line Number="87">        }</Line>
        <Line Number="88" />
        <Line Number="89">    }</Line>
        <Line Number="90">}</Line>
      </Lines>
    </SourceFile>
    <SourceFile>
      <Url>C:\Working\hg\ninjaturtles\NinjaTurtles\ConsoleProcessFactory.cs</Url>
      <SequencePoints>
        <SequencePoint StartLine="87" StartColumn="13" EndLine="87" EndColumn="49">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Newobj, Stloc</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="88" StartColumn="13" EndLine="88" EndColumn="60">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0007: deleting Ldloc, Ldarg, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="89" StartColumn="13" EndLine="89" EndColumn="103">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000f: deleting Ldstr, Call, Dup, Brtrue, Pop, Ldsfld, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0022: write substitution String.V1 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0022: write substitution String.V1 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0022: write substitution String.V1 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001a: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001a: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001a: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="90" StartColumn="13" EndLine="90" EndColumn="85">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0023: deleting Ldloc, Ldloc, Ldc_I4, Newarr, Stloc, Ldloc, Ldc_I4, Call, Brtrue, Ldc_I4, Br, Ldc_I4, Stelem_I2, Ldloc, Callvirt, Callvirt, Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0035: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0035: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0035: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0039: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0024: read substitution String.V1 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0024: read substitution String.V1 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0024: read substitution String.V1 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0024: read substitution String.V1 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="39" EndLine="92" EndColumn="49">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>004c: deleting Ldloc, Callvirt, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0054: deleting Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0054: Br =&gt; Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="22" EndLine="92" EndColumn="35">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0056: deleting Ldloca, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005d: write substitution String.V2 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005d: write substitution String.V2 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005d: write substitution String.V2 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="94" StartColumn="17" EndLine="94" EndColumn="68">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>005f: deleting Ldloc, Ldarg, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0066: write substitution String.V3 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0066: write substitution String.V3 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0066: write substitution String.V3 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005f: read substitution String.V2 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005f: read substitution String.V2 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005f: read substitution String.V2 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>005f: read substitution String.V2 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0060: read substitution String.P0 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0060: read substitution String.P0 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0060: read substitution String.P0 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0060: read substitution String.P0 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="95" StartColumn="17" EndLine="95" EndColumn="46">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0067: deleting Ldloc, Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0072: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0074: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0074: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0074: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0067: read substitution String.V3 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0067: read substitution String.V3 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0067: read substitution String.V3 =&gt; String.V4</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0067: read substitution String.V3 =&gt; String.V2</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="97" StartColumn="21" EndLine="97" EndColumn="40">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0077: deleting Ldloc, Stloc, Leave</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0078: write substitution String.V4 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0078: write substitution String.V4 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0078: write substitution String.V4 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0077: read substitution String.V3 =&gt; String.P0</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0077: read substitution String.V3 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0077: read substitution String.V3 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0077: read substitution String.V3 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="36" EndLine="92" EndColumn="38">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>007d: deleting Ldloca, Call, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0086: deleting Ldloc, Brtrue, Leave, Ldloca, Constrained, Callvirt, Nop, Endfinally</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0088: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0088: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0088: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="100" StartColumn="13" EndLine="100" EndColumn="28">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>009c: deleting Ldarg, Stloc, Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009d: write substitution String.V4 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009d: write substitution String.V4 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009d: write substitution String.V4 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009c: read substitution String.P0 =&gt; String.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009c: read substitution String.P0 =&gt; String.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009c: read substitution String.P0 =&gt; String.V3</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>009c: read substitution String.P0 =&gt; String.V4</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="86" StartColumn="9" EndLine="86" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="92" StartColumn="13" EndLine="92" EndColumn="20">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="16707566" StartColumn="0" EndLine="16707566" EndColumn="0">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="93" StartColumn="13" EndLine="93" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="96" StartColumn="17" EndLine="96" EndColumn="18">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="99" StartColumn="13" EndLine="99" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="101" StartColumn="9" EndLine="101" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="64" StartColumn="13" EndLine="64" EndColumn="74">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0001: deleting Ldarg, Ldarg, Call, Starg</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0001: read substitution String.P0 =&gt; String.P1</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="66" StartColumn="13" EndLine="66" EndColumn="24">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>000a: deleting Call, Ldc_I4, Ceq, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0013: deleting Ldloc, Brtrue</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0014: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0014: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0014: Brtrue =&gt; Br</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="68" StartColumn="17" EndLine="68" EndColumn="93">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0017: deleting Ldstr, Ldarg, Ldarg, Call, Starg</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001c: read substitution String.P0 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>001d: read substitution String.P1 =&gt; String.P0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="69" StartColumn="17" EndLine="69" EndColumn="34">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0025: deleting Ldstr, Starg</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="72" StartColumn="13" EndLine="72" EndColumn="73">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>002d: deleting Ldarg, Call, Brtrue, Ldstr, Br, Ldstr, Call, Starg</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0033: Brtrue =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0033: Brtrue =&gt; Brfalse</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0033: Brtrue =&gt; Br</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>003a: Br =&gt; Nop</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>002d: read substitution String.P1 =&gt; String.P0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="74" StartColumn="13" EndLine="74" EndColumn="77">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0048: deleting Ldarg, Ldarg, Newobj, Stloc</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0048: read substitution String.P0 =&gt; String.P1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0049: read substitution String.P1 =&gt; String.P0</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="75" StartColumn="13" EndLine="75" EndColumn="54">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0050: deleting Ldloc, Ldc_I4, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="76" StartColumn="13" EndLine="76" EndColumn="52">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0058: deleting Ldloc, Ldc_I4, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="77" StartColumn="13" EndLine="77" EndColumn="60">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>0060: deleting Ldloc, Ldc_I4, Callvirt, Nop</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="79" StartColumn="13" EndLine="82" EndColumn="15">
          <AppliedMutants>
            <AppliedMutant Killed="true">
              <Description>006d: write substitution Process.V1 =&gt; Process.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0077: write substitution Process.V2 =&gt; Process.V1</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>006e: read substitution Process.V1 =&gt; Process.V2</Description>
            </AppliedMutant>
            <AppliedMutant Killed="true">
              <Description>0076: read substitution Process.V1 =&gt; Process.V2</Description>
            </AppliedMutant>
          </AppliedMutants>
        </SequencePoint>
        <SequencePoint StartLine="63" StartColumn="9" EndLine="63" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="67" StartColumn="13" EndLine="67" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="70" StartColumn="13" EndLine="70" EndColumn="14">
          <AppliedMutants />
        </SequencePoint>
        <SequencePoint StartLine="83" StartColumn="9" EndLine="83" EndColumn="10">
          <AppliedMutants />
        </SequencePoint>
      </SequencePoints>
      <Lines>
        <Line Number="1">#region Copyright &amp; licence</Line>
        <Line Number="2" />
        <Line Number="3">// This file is part of NinjaTurtles.</Line>
        <Line Number="4">// </Line>
        <Line Number="5">// NinjaTurtles is free software: you can redistribute it and/or modify</Line>
        <Line Number="6">// it under the terms of the GNU Lesser General Public License as</Line>
        <Line Number="7">// published by the Free Software Foundation, either version 3 of the</Line>
        <Line Number="8">// License, or (at your option) any later version.</Line>
        <Line Number="9">// </Line>
        <Line Number="10">// NinjaTurtles is distributed in the hope that it will be useful,</Line>
        <Line Number="11">// but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
        <Line Number="12">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</Line>
        <Line Number="13">// GNU Lesser General Public License for more details.</Line>
        <Line Number="14">// </Line>
        <Line Number="15">// You should have received a copy of the GNU Lesser General Public</Line>
        <Line Number="16">// License along with NinjaTurtles.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</Line>
        <Line Number="17">// </Line>
        <Line Number="18">// Copyright (C) 2012 David Musgrove and others.</Line>
        <Line Number="19" />
        <Line Number="20">#endregion</Line>
        <Line Number="21" />
        <Line Number="22">using System;</Line>
        <Line Number="23">using System.Collections.Generic;</Line>
        <Line Number="24">using System.Diagnostics;</Line>
        <Line Number="25">using System.IO;</Line>
        <Line Number="26" />
        <Line Number="27">namespace NinjaTurtles</Line>
        <Line Number="28">{</Line>
        <Line Number="29">    /// &lt;summary&gt;</Line>
        <Line Number="30">    /// A factory class used to instatiate a &lt;see cref="Process" /&gt; instance,</Line>
        <Line Number="31">    /// taking into account the operating system and runtime.</Line>
        <Line Number="32">    /// &lt;/summary&gt;</Line>
        <Line Number="33">    public static class ConsoleProcessFactory</Line>
        <Line Number="34">    {</Line>
        <Line Number="35">        internal static bool IsMono { get; set; }</Line>
        <Line Number="36">        internal static bool IsWindows { get; set; }</Line>
        <Line Number="37" />
        <Line Number="38">        static ConsoleProcessFactory()</Line>
        <Line Number="39">        {</Line>
        <Line Number="40">            IsMono = Type.GetType("Mono.Runtime") != null;</Line>
        <Line Number="41">            IsWindows = Environment.OSVersion.Platform.ToString().StartsWith("Win")</Line>
        <Line Number="42">                        || Environment.OSVersion.Platform == PlatformID.Xbox;</Line>
        <Line Number="43">        }</Line>
        <Line Number="44" />
        <Line Number="45">        /// &lt;summary&gt;</Line>
        <Line Number="46">        /// Creates a &lt;see cref="Process" /&gt; instance used to execute the</Line>
        <Line Number="47">        /// executable identifier by the &lt;paramref name="exeName"/&gt;</Line>
        <Line Number="48">        /// parameter, with the &lt;paramref name="arguments"/&gt; specified.</Line>
        <Line Number="49">        /// &lt;/summary&gt;</Line>
        <Line Number="50">        /// &lt;param name="exeName"&gt;</Line>
        <Line Number="51">        /// The name (and path) of the executable to run.</Line>
        <Line Number="52">        /// &lt;/param&gt;</Line>
        <Line Number="53">        /// &lt;param name="arguments"&gt;</Line>
        <Line Number="54">        /// The command line arguments to pass to the executable.</Line>
        <Line Number="55">        /// &lt;/param&gt;</Line>
        <Line Number="56">        /// &lt;param name="additionalSearchLocations"&gt;</Line>
        <Line Number="57">        /// An optional list of additional search paths.</Line>
        <Line Number="58">        /// &lt;/param&gt;</Line>
        <Line Number="59">        /// &lt;returns&gt;</Line>
        <Line Number="60">        /// An instance of &lt;see cref="Process" /&gt;.</Line>
        <Line Number="61">        /// &lt;/returns&gt;</Line>
        <Line Number="62">        public static Process CreateProcess(string exeName, string arguments, params string[] additionalSearchLocations)</Line>
        <Line Number="63">        {</Line>
        <Line Number="64">            exeName = FindExecutable(exeName, additionalSearchLocations);</Line>
        <Line Number="65" />
        <Line Number="66">            if (IsMono)</Line>
        <Line Number="67">            {</Line>
        <Line Number="68">                arguments = string.Format("--runtime=v4.0 \"{0}\" {1}", exeName, arguments);</Line>
        <Line Number="69">                exeName = "mono";</Line>
        <Line Number="70">            }</Line>
        <Line Number="71" />
        <Line Number="72">            arguments = string.Format(arguments, IsWindows ? "/" : "-");</Line>
        <Line Number="73" />
        <Line Number="74">            var processStartInfo = new ProcessStartInfo(exeName, arguments);</Line>
        <Line Number="75">            processStartInfo.UseShellExecute = false;</Line>
        <Line Number="76">            processStartInfo.CreateNoWindow = true;</Line>
        <Line Number="77">            processStartInfo.RedirectStandardOutput = true;</Line>
        <Line Number="78" />
        <Line Number="79">            return new Process</Line>
        <Line Number="80">            {</Line>
        <Line Number="81">                StartInfo = processStartInfo</Line>
        <Line Number="82">            };</Line>
        <Line Number="83">        }</Line>
        <Line Number="84" />
        <Line Number="85">        private static string FindExecutable(string exeName, string[] additionalSearchLocations)</Line>
        <Line Number="86">        {</Line>
        <Line Number="87">            var searchPath = new List&lt;string&gt;();</Line>
        <Line Number="88">            searchPath.AddRange(additionalSearchLocations);</Line>
        <Line Number="89">            string environmentSearchPath = Environment.GetEnvironmentVariable("PATH") ?? string.Empty;</Line>
        <Line Number="90">            searchPath.AddRange(environmentSearchPath.Split(IsWindows ? ';' : ':'));</Line>
        <Line Number="91" />
        <Line Number="92">            foreach (string folder in searchPath)</Line>
        <Line Number="93">            {</Line>
        <Line Number="94">                string fullExePath = Path.Combine(folder, exeName);</Line>
        <Line Number="95">                if (File.Exists(fullExePath))</Line>
        <Line Number="96">                {</Line>
        <Line Number="97">                    return fullExePath;</Line>
        <Line Number="98">                }</Line>
        <Line Number="99">            }</Line>
        <Line Number="100">            return exeName;</Line>
        <Line Number="101">        }</Line>
        <Line Number="102">    }</Line>
        <Line Number="103">}</Line>
      </Lines>
    </SourceFile>
  </SourceFiles>
</MutationTestingReport>